{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/app/app.component.html","webpack:///./src/app/components/account-card/account-card.component.html","webpack:///./src/app/components/account-list/account-list.component.html","webpack:///./src/app/components/account-transaction-list/account-transaction-list.component.html","webpack:///./src/app/components/app-layout/app-layout.component.html","webpack:///./src/app/components/app-layout/navbar-action-container/navbar-action-container.component.html","webpack:///./src/app/components/app-layout/navbar-action-item/navbar-action-item.component.html","webpack:///./src/app/components/app-layout/navbar-content/navbar-content.component.html","webpack:///./src/app/components/app-layout/navbar-home/navbar-home.component.html","webpack:///./src/app/components/app-layout/navbar-menu/navbar-menu.component.html","webpack:///./src/app/components/app-layout/sidenav-content/sidenav-content.component.html","webpack:///./src/app/components/donations-banner/donations-banner.component.html","webpack:///./src/app/containers/account-transaction/account-transaction.component.html","webpack:///./src/app/containers/donations-page/donations-page.component.html","webpack:///./src/app/containers/home-page/home-page.component.html","webpack:///./src/app/app-initializer.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/account-card/account-card.component.scss","webpack:///./src/app/components/account-card/account-card.component.ts","webpack:///./src/app/components/account-card/account-card.module.ts","webpack:///./src/app/components/account-list/account-list.component.scss","webpack:///./src/app/components/account-list/account-list.component.ts","webpack:///./src/app/components/account-list/account-list.module.ts","webpack:///./src/app/components/account-transaction-list/account-transaction-list.component.scss","webpack:///./src/app/components/account-transaction-list/account-transaction-list.component.ts","webpack:///./src/app/components/account-transaction-list/account-transaction-list.module.ts","webpack:///./src/app/components/app-layout/app-layout.component.scss","webpack:///./src/app/components/app-layout/app-layout.component.ts","webpack:///./src/app/components/app-layout/app-layout.module.ts","webpack:///./src/app/components/app-layout/navbar-action-container/navbar-action-container.component.scss","webpack:///./src/app/components/app-layout/navbar-action-container/navbar-action-container.component.ts","webpack:///./src/app/components/app-layout/navbar-action-item/navbar-action-item.component.scss","webpack:///./src/app/components/app-layout/navbar-action-item/navbar-action-item.component.ts","webpack:///./src/app/components/app-layout/navbar-content/navbar-content.component.ts","webpack:///./src/app/components/app-layout/navbar-home/navbar-home.component.scss","webpack:///./src/app/components/app-layout/navbar-home/navbar-home.component.ts","webpack:///./src/app/components/app-layout/navbar-menu/navbar-menu.component.scss","webpack:///./src/app/components/app-layout/navbar-menu/navbar-menu.component.ts","webpack:///./src/app/components/app-layout/sidenav-content/sidenav-content.component.ts","webpack:///./src/app/components/donations-banner/donations-banner.component.ts","webpack:///./src/app/components/donations-banner/donations-banner.module.ts","webpack:///./src/app/containers/account-transaction/account-transaction.component.scss","webpack:///./src/app/containers/account-transaction/account-transaction.component.ts","webpack:///./src/app/containers/account-transaction/account-transaction.module.ts","webpack:///./src/app/containers/donations-page/donations-page.component.scss","webpack:///./src/app/containers/donations-page/donations-page.component.ts","webpack:///./src/app/containers/donations-page/donations-page.module.ts","webpack:///./src/app/containers/home-page/home-page.component.scss","webpack:///./src/app/containers/home-page/home-page.component.ts","webpack:///./src/app/containers/home-page/home-page.module.ts","webpack:///./src/app/material-modules.ts","webpack:///./src/app/services/account-api.service.ts","webpack:///./src/app/services/account-transaction-api.service.ts","webpack:///./src/app/services/account.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/config.ts","webpack:///./src/app/services/globals.service.ts","webpack:///./src/app/services/index.ts","webpack:///./src/app/services/load-accounts-resolver.service.ts","webpack:///./src/app/services/token-interceptor.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/store/actions/account-api.actions.ts","webpack:///./src/app/store/actions/account-transaction-api.actions.ts","webpack:///./src/app/store/actions/account-transaction.actions.ts","webpack:///./src/app/store/actions/account.actions.ts","webpack:///./src/app/store/actions/index.ts","webpack:///./src/app/store/effects/account-transaction.effects.ts","webpack:///./src/app/store/effects/account.effects.ts","webpack:///./src/app/store/effects/index.ts","webpack:///./src/app/store/reducers/account-transaction.reducer.ts","webpack:///./src/app/store/reducers/account.reducer.ts","webpack:///./src/app/store/reducers/index.ts","webpack:///./src/app/store/reducers/merged-route-serialzer.ts","webpack:///./src/app/utils.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","module.exports = \"<ffdc-app-layout>\\r\\n  <ffdc-donations-banner></ffdc-donations-banner>\\r\\n  <ffdc-navbar-content [outlined]=\\\"(isHomePage$ | async)\\\">\\r\\n      <ffdc-navbar-home homeUrl=\\\".\\\" [dense]=\\\"!(isHomePage$ | async)\\\"></ffdc-navbar-home>\\r\\n      <ffdc-navbar-menu *ngIf=\\\"!(isHomePage$ | async)\\\" [navigationNodes]=\\\"navbarMenuData\\\"></ffdc-navbar-menu>\\r\\n      <ffdc-navbar-action-container>\\r\\n        <ffdc-navbar-action-item icon=\\\"search\\\" title=\\\"Search\\\">\\r\\n          <button mat-icon-button color=\\\"neutral\\\">\\r\\n            <mat-icon>search</mat-icon>\\r\\n          </button>\\r\\n        </ffdc-navbar-action-item>\\r\\n        <ffdc-navbar-action-item icon=\\\"notifications\\\" title=\\\"Notifications\\\">\\r\\n          <button mat-icon-button color=\\\"neutral\\\">\\r\\n            <mat-icon>notifications</mat-icon>\\r\\n          </button>\\r\\n        </ffdc-navbar-action-item>\\r\\n        <ffdc-navbar-action-item icon=\\\"help_outline\\\" title=\\\"Help\\\">\\r\\n          <button mat-icon-button color=\\\"neutral\\\">\\r\\n            <mat-icon>help_outline</mat-icon>\\r\\n          </button>\\r\\n        </ffdc-navbar-action-item>\\r\\n        <ffdc-navbar-action-item icon=\\\"apps\\\" title=\\\"Applications\\\">\\r\\n          <button mat-icon-button color=\\\"neutral\\\">\\r\\n            <mat-icon>apps</mat-icon>\\r\\n          </button>\\r\\n        </ffdc-navbar-action-item>\\r\\n        <ffdc-navbar-action-item icon=\\\"account_circle\\\" title=\\\"My account\\\">\\r\\n          <button mat-icon-button color=\\\"gradient\\\">\\r\\n            <mat-icon>account_circle</mat-icon>\\r\\n          </button>\\r\\n        </ffdc-navbar-action-item>\\r\\n      </ffdc-navbar-action-container>\\r\\n    <!-- </mat-toolbar> -->\\r\\n  </ffdc-navbar-content>\\r\\n  <ffdc-sidenav-content *ngIf=\\\"!(isHomePage$ | async)\\\">\\r\\n    <div class=\\\"uxg-nav-header\\\">\\r\\n      <mat-card class=\\\"uxg-card-product clickable\\\">\\r\\n        <span class=\\\"uxg-h3 uxg-card-product-name\\\">Ac</span>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n    <mat-nav-list class=\\\"uxg-nav-list\\\">\\r\\n      <a mat-list-item routerLink = \\\"/\\\" class=\\\"uxg-list-item-selected\\\">\\r\\n        <mat-icon mat-list-icon>home</mat-icon>\\r\\n        <p>Home</p>\\r\\n      </a>\\r\\n      <a mat-list-item routerLink=\\\"/accounts\\\">\\r\\n        <mat-icon mat-list-icon>dashboard</mat-icon>\\r\\n        <p>Accounts</p>\\r\\n      </a>\\r\\n      <a mat-list-item>\\r\\n        <mat-icon mat-list-icon>notifications</mat-icon>\\r\\n        <p>Insights</p>\\r\\n      </a>\\r\\n      <a mat-list-item>\\r\\n        <mat-icon mat-list-icon>extension</mat-icon>\\r\\n        <p>RIB & Documents</p>\\r\\n      </a>\\r\\n      <a mat-list-item>\\r\\n        <mat-icon mat-list-icon>settings</mat-icon>\\r\\n        <p>Transfer</p>\\r\\n      </a>\\r\\n      <mat-divider></mat-divider>\\r\\n    </mat-nav-list>\\r\\n    <mat-nav-list class=\\\"uxg-link-list\\\">\\r\\n      <a mat-list-item>\\r\\n        <mat-icon mat-list-icon>help</mat-icon>\\r\\n        <p>Help</p>\\r\\n      </a>\\r\\n      <a mat-list-item href=\\\"/logout\\\">\\r\\n        <mat-icon  mat-list-icon>power_settings_new</mat-icon>\\r\\n        <p>Sign out</p>\\r\\n      </a>\\r\\n    </mat-nav-list>\\r\\n  </ffdc-sidenav-content>\\r\\n  <router-outlet></router-outlet>\\r\\n</ffdc-app-layout>\\r\\n\"","module.exports = \"<mat-card class=\\\"account-card\\\">\\r\\n  <mat-card-content>\\r\\n    <div class=\\\"round-icon\\\">\\r\\n      <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Account card\\\">credit_card</mat-icon>\\r\\n    </div>\\r\\n    <div>\\r\\n      <div class=\\\"uxg-body-1\\\">{{ accountOverview.nickname }}</div>\\r\\n      <div class=\\\"uxg-h5\\\">{{ accountOverview.currentBalance | currency }}</div>\\r\\n    </div>\\r\\n  </mat-card-content>\\r\\n  <mat-card-footer>\\r\\n    <mat-divider></mat-divider>\\r\\n    <div class=\\\"uxg-body-2 account-card-number-padding\\\">{{ accountOverview.accountNumber }}</div>\\r\\n  </mat-card-footer>\\r\\n</mat-card>\\r\\n\"","module.exports = \"<ng-container *ngFor=\\\"let account of accounts\\\">\\r\\n  <ffdc-account-card class=\\\"clickable\\\" (click)=\\\"onSelectedAccount(account)\\\" [account]=\\\"account\\\"></ffdc-account-card>\\r\\n</ng-container>\\r\\n\"","module.exports = \"<mat-list>\\r\\n  <ng-container *ngFor=\\\"let date of transactionDates\\\">\\r\\n    <div class=\\\"account-transaction-list-headline\\\">\\r\\n      <mat-icon>date_range</mat-icon>\\r\\n      &nbsp;&nbsp;{{ date }}\\r\\n    </div>\\r\\n    <mat-list-item *ngFor=\\\"let transaction of groupByAccountTransactions[date]\\\">\\r\\n      <div class=\\\"round-icon\\\" mat-list-icon>\\r\\n        <mat-icon>shopping_cart</mat-icon>\\r\\n      </div>\\r\\n\\r\\n      <div mat-line class=\\\"uxg-subtitle-1\\\">{{ transaction.account.description || 'No description' }}</div>\\r\\n      <div mat-line class=\\\"uxg-body-2\\\">{{ transaction.account.nickname }}</div>\\r\\n      {{ transaction.transactionAmount | currency }}\\r\\n    </mat-list-item>\\r\\n  </ng-container>\\r\\n</mat-list>\\r\\n\"","module.exports = \"<ng-container *ngIf=\\\"sidenavContent; else navbar\\\" hasBackdrop=\\\"true\\\">\\r\\n  <mat-sidenav-container class=\\\"uxg-nav app-layout-sidenav-container\\\">\\r\\n    <mat-sidenav #sidenav mode=\\\"over\\\">\\r\\n      <ng-template [cdkPortalOutlet]=\\\"sidenavContent.content\\\"></ng-template>\\r\\n    </mat-sidenav>\\r\\n    <mat-sidenav-content>\\r\\n      <ng-container *ngTemplateOutlet=\\\"navbar\\\"></ng-container>\\r\\n    </mat-sidenav-content>\\r\\n  </mat-sidenav-container>\\r\\n</ng-container>\\r\\n\\r\\n<ng-template #navbar>\\r\\n  <ng-container *ngIf=\\\"navbarContent; else content\\\">\\r\\n    <button *ngIf=\\\"sidenavContent\\\" class=\\\"app-layout-toggle-menu-btn\\\" mat-icon-button (click)=\\\"toggleSidenav()\\\">\\r\\n      <mat-icon>menu</mat-icon>\\r\\n    </button>\\r\\n    <div>\\r\\n    <div class=\\\"app-layout-navbar\\\" [ngClass]=\\\"{'app-layout-navbar--outlined': navbarContent.outlined, 'app-layout-navbar--sidenav': sidenavContent}\\\">\\r\\n      <ng-template [cdkPortalOutlet]=\\\"navbarContent.content\\\"></ng-template>\\r\\n    </div>\\r\\n  </div>\\r\\n    <div class=\\\"app-layout-content\\\">\\r\\n      <ng-container *ngTemplateOutlet=\\\"content\\\"></ng-container>\\r\\n    </div>\\r\\n  </ng-container>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #content>\\r\\n  <ng-content></ng-content>\\r\\n</ng-template>\\r\\n\"","module.exports = \"<ng-container *ngFor=\\\"let actionItem of actionItems\\\">\\r\\n  <ng-container *ngTemplateOutlet=\\\"actionItem.actionItemTemplate\\\"></ng-container>\\r\\n</ng-container>\\r\\n<button mat-icon-button [matMenuTriggerFor]=\\\"actionMenu\\\" aria-label=\\\"Action Menu\\\" *ngIf=\\\"actionMenuItems\\\"\\r\\n  xPosition=\\\"before\\\" yPosition=\\\"below\\\">\\r\\n  <mat-icon>more_vert</mat-icon>\\r\\n</button>\\r\\n<mat-menu #actionMenu panelClass=\\\"action-menu-panel\\\">\\r\\n  <ng-template matMenuContent>\\r\\n    <ng-container *ngFor=\\\"let menuItem of actionMenuItems\\\">\\r\\n      <ng-container *ngTemplateOutlet=\\\"menuItem.menuItemTemplate\\\"></ng-container>\\r\\n    </ng-container>\\r\\n  </ng-template>\\r\\n</mat-menu>\\r\\n\"","module.exports = \"<ng-template #actionItem>\\r\\n  <ng-content></ng-content>\\r\\n</ng-template>\\r\\n<ng-template #menuItem>\\r\\n  <button mat-menu-item>\\r\\n    <mat-icon>{{icon}}</mat-icon>\\r\\n    <span>{{title}}</span>\\r\\n  </button>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n\"","module.exports = \"<ng-template>\\r\\n  <ng-content></ng-content>\\r\\n</ng-template>\\r\\n\"","module.exports = \"<a [routerLink]=\\\"homeUrl\\\">\\r\\n  <div class=\\\"navbar-home-logo\\\" [ngClass]=\\\"{'navbar-home-logo--dense': dense}\\\">\\r\\n  </div>\\r\\n</a>\\r\\n\"","module.exports = \"<ng-container *ngIf=\\\"displayMode == 'breadcrumb'; then breadcrumbMenu; else defaultMenu\\\">\\r\\n\\r\\n</ng-container>\\r\\n\\r\\n<ng-template #breadcrumbMenu>\\r\\n    <ng-container *ngIf=\\\"!canGoBack; else goBackBreadcrumb\\\">\\r\\n      <ul class=\\\"uxg-breadcrumb\\\" *ngIf=\\\"!handsetLayout; else handsetBreadcrumb\\\">\\r\\n        <ng-container *ngFor=\\\"let navigationNode of navigationNodes; last as isLast; first as isFirst\\\">\\r\\n          <li *ngIf=\\\"!isLast; else lastItem\\\">\\r\\n            <a\\r\\n              mat-flat-button\\r\\n              [ngClass]=\\\"{ 'navbar-menu-breadcrumb__first-item': isFirst }\\\"\\r\\n              [routerLink]=\\\"navigationNode.url\\\">\\r\\n              {{ navigationNode.title }}\\r\\n            </a>\\r\\n          </li>\\r\\n          <ng-template #lastItem>\\r\\n            <li *ngIf=\\\"lastNagivationNodeChildren; else lastSingleItem\\\">\\r\\n              <button [matMenuTriggerFor]=\\\"menu\\\" mat-button color=\\\"primary\\\">\\r\\n                {{ navigationNode.title }}\\r\\n                <mat-icon>expand_more</mat-icon>\\r\\n              </button>\\r\\n              <mat-menu #menu=\\\"matMenu\\\">\\r\\n                <mat-nav-list class=\\\"uxg-nav-list-level\\\">\\r\\n                  <a\\r\\n                    *ngFor=\\\"let childNavigationNode of lastNagivationNodeChildren\\\"\\r\\n                    [routerLink]=\\\"childNavigationNode.url\\\"\\r\\n                    [ngClass]=\\\"{ 'list-item-selected': childNavigationNode.title === navigationNode.title }\\\"\\r\\n                    mat-list-item>\\r\\n                    <mat-icon mat-list-icon>filter_none</mat-icon>\\r\\n                    <p>{{ childNavigationNode.title }}</p>\\r\\n                  </a>\\r\\n                </mat-nav-list>\\r\\n              </mat-menu>\\r\\n            </li>\\r\\n          </ng-template>\\r\\n          <ng-template #lastSingleItem>\\r\\n            <li>\\r\\n              <span\\r\\n                [ngClass]=\\\"{\\r\\n                  'navbar-menu-breadcrumb__first-item': isFirst,\\r\\n                  'navbar-breadcrumb-label': !isFirst\\r\\n                }\\\"\\r\\n                >{{ navigationNode.title }}</span\\r\\n              >\\r\\n            </li>\\r\\n          </ng-template>\\r\\n        </ng-container>\\r\\n      </ul>\\r\\n\\r\\n      <ng-template #handsetBreadcrumb>\\r\\n        <ng-container *ngIf=\\\"lastNagivationNodeChildren\\\">\\r\\n          <button [matMenuTriggerFor]=\\\"menu\\\" mat-button color=\\\"primary\\\">\\r\\n            {{ activeNode?.title }}\\r\\n            <mat-icon>expand_more</mat-icon>\\r\\n          </button>\\r\\n          <mat-menu #menu=\\\"matMenu\\\">\\r\\n            <mat-nav-list class=\\\"uxg-nav-list-level\\\">\\r\\n              <a\\r\\n                *ngFor=\\\"let childNavigationNode of lastNagivationNodeChildren\\\"\\r\\n                [routerLink]=\\\"childNavigationNode.url\\\"\\r\\n                [ngClass]=\\\"{ 'list-item-selected\\\\': ': childNavigationNode.title === activeNode.title }\\\"\\r\\n                mat-list-item\\r\\n              >\\r\\n                <mat-icon mat-list-icon>filter_none</mat-icon>\\r\\n                <p>{{ childNavigationNode.title }}</p>\\r\\n              </a>\\r\\n            </mat-nav-list>\\r\\n          </mat-menu>\\r\\n        </ng-container>\\r\\n        <ng-container *ngIf=\\\"!lastNagivationNodeChildren\\\">\\r\\n          <span class=\\\"navbar-menu-breadcrumb__first-item\\\">{{ activeNode?.title }}</span>\\r\\n        </ng-container>\\r\\n      </ng-template>\\r\\n    </ng-container>\\r\\n    <!-- back button navigation : settings/user/notifications -->\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #defaultMenu>\\r\\n  test\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #goBackBreadcrumb>\\r\\n    <button mat-icon-button class=\\\"toolbar-back-icon\\\" color=\\\"accent\\\" aria-label=\\\"Menu\\\">\\r\\n      <mat-icon>chevron_left</mat-icon>\\r\\n    </button>\\r\\n    <h5 class=\\\"uxg-h5\\\">{{ navigationNodes[navigationNodes.length - 1].title }}</h5>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \"<ng-template><ng-content></ng-content></ng-template>\\r\\n\"","module.exports = \"<mat-toolbar *ngIf=\\\"donationsBanner.enabled\\\">\\r\\n  <mat-toolbar-row fxLayout fxLayout.lt-md=\\\"column\\\" class=\\\"donations-banner-row\\\">\\r\\n    <div fxHide.lt-md>\\r\\n      <div class=\\\"icon-wrapper\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n        <mat-icon *ngIf=\\\"donationsBanner.content.icon\\\" id=\\\"donations-icon\\\" color=\\\"accent\\\" dense> {{donationsBanner.content.icon}}</mat-icon>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div\\r\\n      class=\\\"text-div\\\"\\r\\n      fxLayoutAlign=\\\"center center\\\"\\r\\n      fxLayout.lt-md=\\\"column\\\"\\r\\n      fxLayoutAlign.lt-md=\\\"center start\\\"\\r\\n      fxLayoutFill\\r\\n    >\\r\\n      <span class=\\\"title mr-2\\\" *ngIf=\\\"donationsBanner.content.title\\\">{{ donationsBanner.content.title }}</span>\\r\\n\\r\\n      <div fxFlex class=\\\"announcement-paragraph\\\" [innerHTML]=\\\"donationsBanner.content.announcement\\\"></div>\\r\\n    </div>\\r\\n    <div fxFlex fxLayoutAlign=\\\"flex-start\\\" class=\\\"buttons-div\\\" fxLayoutAlign.lt-md=\\\"start center\\\">\\r\\n      <button mat-flat-button class=\\\"dismiss-button\\\" (click)=\\\"onDismiss()\\\" color=\\\"accent\\\">\\r\\n        {{ donationsBanner.content.dismissButtonText }}\\r\\n      </button>\\r\\n\\r\\n      <a mat-flat-button routerLink=\\\"/donations\\\" (click)=\\\"onAction()\\\" color=\\\"primary\\\">\\r\\n        {{ donationsBanner.content.actionButtonText }}\\r\\n      </a>\\r\\n    </div>\\r\\n\\r\\n    <div fxFlex fxHide.lt-md fxLayoutAlign=\\\"flex-end\\\">\\r\\n      <button  class=\\\"close-button\\\" (click)=\\\"onDismiss()\\\" mat-icon-button>\\r\\n        <mat-icon>close</mat-icon>\\r\\n      </button>\\r\\n    </div>\\r\\n  </mat-toolbar-row>\\r\\n</mat-toolbar>\\r\\n\"","module.exports = \"<mat-card>\\r\\n  <div class=\\\"account-transaction-header\\\">\\r\\n    <div mat-card-title>Transactions - {{selectedDateLabel$ | async }}</div>\\r\\n    <div>\\r\\n      <mat-form-field>\\r\\n        <input matInput [matDatepicker]=\\\"picker\\\" [max]=\\\"maxDate\\\" style=\\\"display: none;\\\">\\r\\n        <mat-datepicker #picker \\r\\n          startView=\\\"year\\\"\\r\\n          (monthSelected)=\\\"chosenMonthHandler($event, picker)\\\"\\r\\n        ></mat-datepicker>\\r\\n      </mat-form-field>\\r\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"picker.open()\\\">Pick a month</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <mat-tab-group [selectedIndex]=\\\"selectedTabIndex\\\" (selectedIndexChange)=\\\"setSelectedTabIndex($event)\\\">\\r\\n    <mat-tab label=\\\"View All\\\">\\r\\n      <ng-container *ngIf=\\\"searching$ | async; else listAccountTransactions\\\">\\r\\n        <div class=\\\"account-transaction-spinner\\\">\\r\\n          <mat-spinner></mat-spinner>\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Incomes\\\">\\r\\n      <ng-container *ngIf=\\\"searching$ | async; else listAccountTransactions\\\">\\r\\n        <div class=\\\"account-transaction-spinner\\\">\\r\\n          <mat-spinner></mat-spinner>\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Expenses\\\">\\r\\n      <ng-container *ngIf=\\\"searching$ | async; else listAccountTransactions\\\">\\r\\n        <div class=\\\"account-transaction-spinner\\\">\\r\\n          <mat-spinner></mat-spinner>\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </mat-tab>\\r\\n  </mat-tab-group>\\r\\n</mat-card>\\r\\n<ng-template #listAccountTransactions>\\r\\n  <ng-container *ngIf=\\\"accountTransactions?.length > 0\\\">\\r\\n    <ffdc-account-transaction-list [accountTransactions]=\\\"accountTransactions\\\"></ffdc-account-transaction-list>\\r\\n  </ng-container>\\r\\n  <ng-container *ngIf=\\\"accountTransactions?.length === 0\\\">\\r\\n    <div class=\\\"no-transactions\\\">\\r\\n      <mat-icon>sentiment_dissatisfied</mat-icon>\\r\\n      <p>No transactions</p>\\r\\n    </div>\\r\\n  </ng-container>\\r\\n</ng-template>\\r\\n\"","module.exports = \"<div class=\\\"donations-page-overview\\\">\\r\\n  <div class=\\\"acount-page-all-acount-text uxg-display-4\\\">Your balance</div>\\r\\n  <div class=\\\"account-page-acount-overview-info\\\">\\r\\n    <div class=\\\"round-icon\\\">\\r\\n      <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Account\\\">credit_card</mat-icon>\\r\\n    </div>\\r\\n    <div class=\\\"account-page-acount-overview-info-detail\\\">\\r\\n      <div class=\\\"uxg-subtitle-2\\\">Available Balance:</div>\\r\\n      <div class=\\\"uxg-h5\\\">{{ allAcountsOverview.available | currency }}</div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"acount-page-all-acount-text uxg-display-4\\\">Select an account</div>\\r\\n  <mat-form-field appearance=\\\"fill\\\">\\r\\n    <mat-select placeholder=\\\"--\\\" [(ngModel)]=\\\"selectedAccount\\\">\\r\\n      <mat-option *ngFor=\\\"let account of accounts\\\" [value]=\\\"account.accountId\\\">\\r\\n        {{ account.nickname }}\\r\\n      </mat-option>\\r\\n    </mat-select>\\r\\n  </mat-form-field>\\r\\n  <div class=\\\"acount-page-all-acount-text uxg-display-4\\\">Select an ammount</div>\\r\\n  <mat-form-field appearance=\\\"fill\\\">\\r\\n    <input [(ngModel)]=\\\"donationAmmount\\\" type=\\\"number\\\" matInput placeholder=\\\"Ex. $10\\\" />\\r\\n  </mat-form-field>\\r\\n  <div class=\\\"acount-page-all-acount-text uxg-display-4\\\">How often do you want to support this cause?</div>\\r\\n  <div fxLayout=\\\"row\\\">\\r\\n    <button mat-flat-button (click)=\\\"setInterval(6)\\\" class=\\\"donate-button\\\" color=\\\"accent\\\">\\r\\n      Every 6 months\\r\\n    </button>\\r\\n    <button mat-flat-button (click)=\\\"setInterval(6)\\\" class=\\\"donate-button\\\" color=\\\"accent\\\">\\r\\n      Every 12 months\\r\\n    </button>\\r\\n  </div>\\r\\n  <div>\\r\\n    <button mat-stroked-button color=\\\"accent\\\">\\r\\n      Cancel\\r\\n    </button>\\r\\n    <button mat-flat-button color=\\\"accent\\\">\\r\\n      Donate!\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"<div class=\\\"home-page-welcome\\\">\\r\\n  <div class=\\\"uxg-display-6\\\">Welcome</div>\\r\\n  <div class=\\\"uxg-h3\\\">{{ userName }}</div>\\r\\n</div>\\r\\n<div class=\\\"home-page-product-list\\\">\\r\\n  <div class=\\\"home-page-product-item\\\">\\r\\n    <mat-card class=\\\"uxg-card-product clickable\\\" (click)=\\\"goToAccountsPage()\\\">\\r\\n      <span class=\\\"uxg-h3 uxg-card-product-name\\\">Ac</span>\\r\\n    </mat-card>\\r\\n    <div class=\\\"uxg-subtitle-1 home-page-product-item-label\\\">Account</div>\\r\\n  </div>\\r\\n  <div class=\\\"home-page-product-item\\\">\\r\\n    <mat-card class=\\\"uxg-card-product clickable\\\">\\r\\n      <span class=\\\"uxg-h3 uxg-card-product-name\\\">L</span>\\r\\n    </mat-card>\\r\\n    <div class=\\\"uxg-subtitle-1 home-page-product-item-label\\\">Loans</div>\\r\\n  </div>\\r\\n  <div class=\\\"home-page-product-item\\\">\\r\\n    <mat-card class=\\\"uxg-card-product clickable\\\">\\r\\n      <span class=\\\"uxg-h3 uxg-card-product-name\\\">An</span>\\r\\n    </mat-card>\\r\\n    <div class=\\\"uxg-subtitle-1 home-page-product-item-label\\\">Analytics</div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { HttpClient } from '@angular/common/http';\r\nimport { User } from './store/models/user';\r\nimport { AuthService } from './services';\r\n\r\nexport function setupApplication(authService: AuthService) {\r\n  return (): Promise<any> => {\r\n    return authService.getUserInfo().then(user => authService.user = user);\r\n  };\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomePageComponent } from './containers/home-page/home-page.component';\r\nimport { LoadAccountResolverService } from './services/load-accounts-resolver.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'accounts',\r\n    loadChildren: () => import('./containers/account-page/account-page.module').then(m => m.AccountPageModule),\r\n    data: {\r\n      viewId: 'accounts'\r\n    },\r\n    resolve: {\r\n      accounts: LoadAccountResolverService\r\n    }\r\n  },\r\n  {\r\n    path: 'accounts/:accountId',\r\n    loadChildren: () => import('./containers/account-detail-page/account-detail-page.module').then(m => m.AccountDetailPageModule),\r\n    data: {\r\n      viewId: 'accountDetail'\r\n    },\r\n    resolve: {\r\n      accounts: LoadAccountResolverService\r\n    }\r\n  },\r\n  {\r\n    path: '',\r\n    pathMatch: 'full',\r\n    component: HomePageComponent,\r\n    data: {\r\n      viewId: 'home'\r\n    }\r\n  },\r\n  {\r\n    path: 'donations',\r\n    loadChildren: () => import('./containers/donations-page/donations-page.module').then(m => m.DonationsPageModule),\r\n    data: {\r\n      viewId: 'donations'\r\n    },\r\n    resolve: {\r\n      accounts: LoadAccountResolverService\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","module.exports = \".round-icon {\\n  border-radius: 50%;\\n  margin-right: 16px;\\n  margin-left: 12px;\\n  width: 38px;\\n  height: 38px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.clickable {\\n  cursor: pointer;\\n}\\n\\n.uxg-nav-header {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.uxg-toolbar-logo--fix {\\n  position: absolute;\\n  top: 56px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvQzpcXFVzZXJzXFx1NzIyNjg2XFxGaW5hc3RyYVxcZmZkYy1zYW1wbGUtcmV0YWlsLXdlYmFwcC9zcmNcXGFwcFxcYXBwLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0FDQ0Y7O0FEQ0E7RUFDRSxlQUFBO0FDRUY7O0FEQUE7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtBQ0dGOztBRERBO0VBQ0Usa0JBQUE7RUFDQSxTQUFBO0FDSUYiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucm91bmQtaWNvbiB7XHJcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gIG1hcmdpbi1yaWdodDogMTZweDtcclxuICBtYXJnaW4tbGVmdDogMTJweDtcclxuICB3aWR0aDogMzhweDtcclxuICBoZWlnaHQ6IDM4cHg7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcbi5jbGlja2FibGUge1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG4udXhnLW5hdi1oZWFkZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG4udXhnLXRvb2xiYXItbG9nby0tZml4IHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiA1NnB4O1xyXG59XHJcblxyXG5AbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA2MDBweCkge1xyXG5cclxufVxyXG4iLCIucm91bmQtaWNvbiB7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xuICBtYXJnaW4tbGVmdDogMTJweDtcbiAgd2lkdGg6IDM4cHg7XG4gIGhlaWdodDogMzhweDtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5jbGlja2FibGUge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi51eGctbmF2LWhlYWRlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4udXhnLXRvb2xiYXItbG9nby0tZml4IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDU2cHg7XG59Il19 */\"","import { Component, ChangeDetectorRef, ViewEncapsulation } from '@angular/core';\r\nimport { NavigationNode } from './components/app-layout/navigation-node';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { AppState, selectRouteData, selectAllAccounts, selectRouteParams } from './store/reducers';\r\nimport { Observable, combineLatest } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'ffdc-app',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class AppComponent {\r\n  navbarMenuData: NavigationNode[] = [];\r\n\r\n  isHomePage$: Observable<boolean>;\r\n\r\n  constructor(store: Store<AppState>, private router: Router, private cd: ChangeDetectorRef) {\r\n    this.isHomePage$ = store.pipe(\r\n      select(selectRouteData),\r\n      map(data => (data ? data.viewId === 'home' : false))\r\n    );\r\n\r\n    combineLatest(\r\n      store.pipe(select(selectAllAccounts)),\r\n      store.pipe(select(selectRouteParams)),\r\n      store.pipe(select(selectRouteData))\r\n    ).subscribe(([accounts, routeParams, routeData]) => {\r\n      console.log(\"routeParams\", routeParams);\r\n      if (routeData) {\r\n        console.log(\"RouteData\", routeData);\r\n        if (routeData.viewId === 'accounts') {\r\n          this.navbarMenuData = [\r\n            {\r\n              url: '/accounts',\r\n              title: 'ACCOUNTS'\r\n            }\r\n          ];\r\n        } else if (routeData.viewId === 'accountDetail') {\r\n          const currentAccount = accounts.find(account => account.accountId === routeParams.accountId);\r\n          this.navbarMenuData = [\r\n            {\r\n              url: '/accounts',\r\n              title: 'ACCOUNTS',\r\n              showOtherChildren: true,\r\n              children: accounts.map(account => ({\r\n                url: `/accounts/${account.accountId}`,\r\n                title: `${account.nickname}`\r\n              }))\r\n            },\r\n            {\r\n              url: `/accounts/${routeParams.accountId}`,\r\n              title: currentAccount ? currentAccount.nickname : ''\r\n            }\r\n          ];\r\n        }\r\n        this.cd.markForCheck();\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MaterialModules } from './material-modules';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreRouterConnectingModule, RouterState } from '@ngrx/router-store';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\n\r\nimport { ROOT_REDUCERS } from './store/reducers';\r\nimport { AccountEffects, AccountTransactionEffects } from './store/effects';\r\nimport { setupApplication } from './app-initializer';\r\nimport { HttpClient, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AuthService } from './services';\r\nimport { TokenInterceptor } from './services/token-interceptor.service';\r\nimport { AppLayoutModule } from './components/app-layout/app-layout.module';\r\nimport { HomePageModule } from './containers/home-page/home-page.module';\r\nimport { MergedRouterStateSerializer } from './store/reducers/merged-route-serialzer';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { environment } from '../environments/environment';\r\nimport { BannerModule } from './components/donations-banner/donations-banner.module';\r\nimport { DonationsPageModule } from './containers/donations-page/donations-page.module';\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    BannerModule,\r\n    BrowserAnimationsModule,\r\n    HomePageModule,\r\n    AppLayoutModule,\r\n    HttpClientModule,\r\n    MaterialModules,\r\n    AppRoutingModule,\r\n    DonationsPageModule,\r\n    StoreModule.forRoot(ROOT_REDUCERS),\r\n    EffectsModule.forRoot([AccountEffects, AccountTransactionEffects]),\r\n    StoreRouterConnectingModule.forRoot({\r\n      stateKey: 'router',\r\n      routerState: RouterState.Minimal,\r\n      serializer: MergedRouterStateSerializer\r\n    }),\r\n    StoreDevtoolsModule.instrument({\r\n      name: 'FFDC Sample App',\r\n      // In a production build you would want to disable the Store Devtools\r\n      // logOnly: environment.production,\r\n    }),\r\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: setupApplication,\r\n      multi: true,\r\n      deps: [AuthService]\r\n    },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptor,\r\n      multi: true,\r\n      deps: [AuthService]\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","module.exports = \".account-card mat-card {\\n  width: 263px;\\n  height: 96px;\\n}\\n.account-card mat-card mat-card-content {\\n  display: flex;\\n  justify-content: left;\\n  align-items: center;\\n}\\n.account-card mat-card .account-card-number-padding {\\n  padding: 4px 32px 8px 32px;\\n}\\n@media all and (max-width: 600px) {\\n  .account-card mat-card {\\n    width: 100%;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hY2NvdW50LWNhcmQvQzpcXFVzZXJzXFx1NzIyNjg2XFxGaW5hc3RyYVxcZmZkYy1zYW1wbGUtcmV0YWlsLXdlYmFwcC9zcmNcXGFwcFxcY29tcG9uZW50c1xcYWNjb3VudC1jYXJkXFxhY2NvdW50LWNhcmQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2NvbXBvbmVudHMvYWNjb3VudC1jYXJkL2FjY291bnQtY2FyZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDRTtFQUNFLFlBQUE7RUFDQSxZQUFBO0FDQUo7QURDSTtFQUNFLGFBQUE7RUFDQSxxQkFBQTtFQUNBLG1CQUFBO0FDQ047QURDSTtFQUNFLDBCQUFBO0FDQ047QURFRTtFQUNFO0lBQ0UsV0FBQTtFQ0FKO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2FjY291bnQtY2FyZC9hY2NvdW50LWNhcmQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWNjb3VudC1jYXJkIHtcclxuICBtYXQtY2FyZCB7XHJcbiAgICB3aWR0aDogMjYzcHg7XHJcbiAgICBoZWlnaHQ6IDk2cHg7XHJcbiAgICBtYXQtY2FyZC1jb250ZW50IHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAganVzdGlmeS1jb250ZW50OiBsZWZ0O1xyXG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgfVxyXG4gICAgLmFjY291bnQtY2FyZC1udW1iZXItcGFkZGluZyB7XHJcbiAgICAgIHBhZGRpbmc6IDRweCAzMnB4IDhweCAzMnB4O1xyXG4gICAgfVxyXG4gIH1cclxuICBAbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA2MDBweCkge1xyXG4gICAgbWF0LWNhcmQge1xyXG4gICAgICB3aWR0aDogMTAwJVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iLCIuYWNjb3VudC1jYXJkIG1hdC1jYXJkIHtcbiAgd2lkdGg6IDI2M3B4O1xuICBoZWlnaHQ6IDk2cHg7XG59XG4uYWNjb3VudC1jYXJkIG1hdC1jYXJkIG1hdC1jYXJkLWNvbnRlbnQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGxlZnQ7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4uYWNjb3VudC1jYXJkIG1hdC1jYXJkIC5hY2NvdW50LWNhcmQtbnVtYmVyLXBhZGRpbmcge1xuICBwYWRkaW5nOiA0cHggMzJweCA4cHggMzJweDtcbn1cbkBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7XG4gIC5hY2NvdW50LWNhcmQgbWF0LWNhcmQge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59Il19 */\"","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { AccountEntity, AccountOverview } from '../../store/models';\r\n\r\n@Component({\r\n  selector: 'ffdc-account-card',\r\n  templateUrl: './account-card.component.html',\r\n  styleUrls: ['./account-card.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    class: 'account-card'\r\n  }\r\n})\r\nexport class AccountCardComponent implements OnInit {\r\n\r\n  @Input() account!: AccountEntity;\r\n\r\n  accountOverview!: AccountOverview;\r\n\r\n  constructor( private accountService: AccountService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.accountOverview = this.accountService.getAccountOverview(this.account);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AccountCardComponent } from './account-card.component';\r\nimport { MaterialModules } from '../../material-modules';\r\n\r\n@NgModule({\r\n  declarations: [AccountCardComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MaterialModules\r\n  ],\r\n  exports: [AccountCardComponent]\r\n})\r\nexport class AccountCardModule { }\r\n","module.exports = \".account-list {\\n  display: flex;\\n  flex-wrap: wrap;\\n}\\n.account-list > .account-card {\\n  margin-right: 32px;\\n  margin-top: 16px;\\n  display: flex;\\n  flex: 1;\\n}\\n@media all and (max-width: 600px) {\\n  .account-list {\\n    padding-bottom: 32px;\\n  }\\n  .account-list > .account-card {\\n    margin-right: 0px;\\n    margin-top: 16px;\\n    display: flex;\\n    flex: 1;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hY2NvdW50LWxpc3QvQzpcXFVzZXJzXFx1NzIyNjg2XFxGaW5hc3RyYVxcZmZkYy1zYW1wbGUtcmV0YWlsLXdlYmFwcC9zcmNcXGFwcFxcY29tcG9uZW50c1xcYWNjb3VudC1saXN0XFxhY2NvdW50LWxpc3QuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2NvbXBvbmVudHMvYWNjb3VudC1saXN0L2FjY291bnQtbGlzdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSxlQUFBO0FDQ0Y7QURBRTtFQUNFLGtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxhQUFBO0VBQ0EsT0FBQTtBQ0VKO0FEQ0E7RUFDRTtJQUNFLG9CQUFBO0VDRUY7RURERTtJQUNFLGlCQUFBO0lBQ0EsZ0JBQUE7SUFDQSxhQUFBO0lBQ0EsT0FBQTtFQ0dKO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2FjY291bnQtbGlzdC9hY2NvdW50LWxpc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWNjb3VudC1saXN0IHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtd3JhcDogd3JhcDtcclxuICA+IC5hY2NvdW50LWNhcmQge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAzMnB4O1xyXG4gICAgbWFyZ2luLXRvcDogMTZweDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4OiAxO1xyXG4gIH1cclxufVxyXG5AbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA2MDBweCkge1xyXG4gIC5hY2NvdW50LWxpc3Qge1xyXG4gICAgcGFkZGluZy1ib3R0b206IDMycHg7XHJcbiAgICA+IC5hY2NvdW50LWNhcmQge1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6IDBweDtcclxuICAgICAgbWFyZ2luLXRvcDogMTZweDtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgZmxleDogMTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIiwiLmFjY291bnQtbGlzdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbn1cbi5hY2NvdW50LWxpc3QgPiAuYWNjb3VudC1jYXJkIHtcbiAgbWFyZ2luLXJpZ2h0OiAzMnB4O1xuICBtYXJnaW4tdG9wOiAxNnB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4OiAxO1xufVxuXG5AbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA2MDBweCkge1xuICAuYWNjb3VudC1saXN0IHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMzJweDtcbiAgfVxuICAuYWNjb3VudC1saXN0ID4gLmFjY291bnQtY2FyZCB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwcHg7XG4gICAgbWFyZ2luLXRvcDogMTZweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXg6IDE7XG4gIH1cbn0iXX0= */\"","import { Component, OnInit, ChangeDetectionStrategy, ViewEncapsulation, Input } from '@angular/core';\r\n\r\nimport { Store, select } from '@ngrx/store';\r\nimport { AppState, selectAllAccounts } from '../../store/reducers';\r\nimport { AccountActions } from '../../store/actions';\r\nimport { Observable } from 'rxjs';\r\nimport { AccountSummary, AccountEntity } from '../../store/models';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'ffdc-account-list',\r\n  templateUrl: './account-list.component.html',\r\n  styleUrls: ['./account-list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    class: 'account-list'\r\n  }\r\n})\r\nexport class AccountListComponent implements OnInit {\r\n  @Input() accounts: AccountEntity[] = [];\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  onSelectedAccount(account: AccountEntity) {\r\n    this.router.navigateByUrl(`/accounts/${account.accountId}`);\r\n  }\r\n}\r\n","import { NgModule, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AccountListComponent } from './account-list.component';\r\nimport { AccountCardModule } from '../account-card/account-card.module';\r\n\r\n@NgModule({\r\n  declarations: [AccountListComponent],\r\n  imports: [CommonModule, AccountCardModule],\r\n  exports: [AccountListComponent]\r\n})\r\nexport class AccountListModule {\r\n  constructor() {}\r\n}\r\n","module.exports = \".account-transaction-list mat-list {\\n  max-height: 448px;\\n}\\n.account-transaction-list .account-transaction-list-headline {\\n  padding: 8px;\\n  display: flex;\\n  align-items: center;\\n}\\n.account-transaction-list mat-list-item {\\n  padding-left: 64px;\\n}\\n.account-transaction-list .uxg-subtitle-1 {\\n  font-weight: 500 !important;\\n}\\n.account-transaction-list .uxg-body-2 {\\n  font-weight: 300 !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hY2NvdW50LXRyYW5zYWN0aW9uLWxpc3QvQzpcXFVzZXJzXFx1NzIyNjg2XFxGaW5hc3RyYVxcZmZkYy1zYW1wbGUtcmV0YWlsLXdlYmFwcC9zcmNcXGFwcFxcY29tcG9uZW50c1xcYWNjb3VudC10cmFuc2FjdGlvbi1saXN0XFxhY2NvdW50LXRyYW5zYWN0aW9uLWxpc3QuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2NvbXBvbmVudHMvYWNjb3VudC10cmFuc2FjdGlvbi1saXN0L2FjY291bnQtdHJhbnNhY3Rpb24tbGlzdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDRTtFQUNFLGlCQUFBO0FDQUo7QURFRTtFQUNFLFlBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7QUNBSjtBREVFO0VBQ0Usa0JBQUE7QUNBSjtBREVFO0VBQ0UsMkJBQUE7QUNBSjtBREVFO0VBQ0UsMkJBQUE7QUNBSiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWNjb3VudC10cmFuc2FjdGlvbi1saXN0L2FjY291bnQtdHJhbnNhY3Rpb24tbGlzdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hY2NvdW50LXRyYW5zYWN0aW9uLWxpc3Qge1xyXG4gIG1hdC1saXN0IHtcclxuICAgIG1heC1oZWlnaHQ6IDQ0OHB4O1xyXG4gIH1cclxuICAuYWNjb3VudC10cmFuc2FjdGlvbi1saXN0LWhlYWRsaW5lIHtcclxuICAgIHBhZGRpbmc6IDhweDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIH1cclxuICBtYXQtbGlzdC1pdGVtIHtcclxuICAgIHBhZGRpbmctbGVmdDogNjRweDtcclxuICB9XHJcbiAgLnV4Zy1zdWJ0aXRsZS0xIHtcclxuICAgIGZvbnQtd2VpZ2h0OiA1MDAhaW1wb3J0YW50O1xyXG4gIH1cclxuICAudXhnLWJvZHktMiB7XHJcbiAgICBmb250LXdlaWdodDogMzAwIWltcG9ydGFudDtcclxuICB9XHJcbn1cclxuIiwiLmFjY291bnQtdHJhbnNhY3Rpb24tbGlzdCBtYXQtbGlzdCB7XG4gIG1heC1oZWlnaHQ6IDQ0OHB4O1xufVxuLmFjY291bnQtdHJhbnNhY3Rpb24tbGlzdCAuYWNjb3VudC10cmFuc2FjdGlvbi1saXN0LWhlYWRsaW5lIHtcbiAgcGFkZGluZzogOHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuLmFjY291bnQtdHJhbnNhY3Rpb24tbGlzdCBtYXQtbGlzdC1pdGVtIHtcbiAgcGFkZGluZy1sZWZ0OiA2NHB4O1xufVxuLmFjY291bnQtdHJhbnNhY3Rpb24tbGlzdCAudXhnLXN1YnRpdGxlLTEge1xuICBmb250LXdlaWdodDogNTAwICFpbXBvcnRhbnQ7XG59XG4uYWNjb3VudC10cmFuc2FjdGlvbi1saXN0IC51eGctYm9keS0yIHtcbiAgZm9udC13ZWlnaHQ6IDMwMCAhaW1wb3J0YW50O1xufSJdfQ== */\"","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, Input } from '@angular/core';\r\nimport { AccountTransaction } from '../../store/models/transaction';\r\nimport groupBy from 'lodash/groupBy';\r\nimport { Dictionary } from 'lodash';\r\nimport { compareDate } from '../../utils';\r\n\r\n@Component({\r\n  selector: 'ffdc-account-transaction-list',\r\n  templateUrl: './account-transaction-list.component.html',\r\n  styleUrls: ['./account-transaction-list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    class: 'account-transaction-list'\r\n  }\r\n})\r\nexport class AccountTransactionListComponent implements OnInit {\r\n\r\n  // tslint:disable-next-line: variable-name\r\n  private _accountTransactions!: AccountTransaction[];\r\n\r\n  @Input()\r\n  public get accountTransactions(): AccountTransaction[] {\r\n    return this._accountTransactions;\r\n  }\r\n  public set accountTransactions(value: AccountTransaction[]) {\r\n    this._accountTransactions = value;\r\n    this.groupByAccountTransactions = groupBy(value, 'transactionDate');\r\n    this.transactionDates = Object.keys(this.groupByAccountTransactions).sort(compareDate);\r\n  }\r\n\r\n  groupByAccountTransactions!: Dictionary<AccountTransaction[]>;\r\n  transactionDates: string[] = [];\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AccountTransactionListComponent } from './account-transaction-list.component';\r\nimport { MaterialModules } from '../../material-modules';\r\n\r\n@NgModule({\r\n  declarations: [AccountTransactionListComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MaterialModules\r\n  ],\r\n  exports: [AccountTransactionListComponent]\r\n})\r\nexport class AccountTransactionListModule { }\r\n","module.exports = \"/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\nhtml,\\nbody {\\n  width: 100%;\\n  height: 100%;\\n  margin: 0;\\n  position: relative;\\n  display: flex;\\n  flex-direction: column;\\n}\\n.app-layout {\\n  flex: 1;\\n  position: relative;\\n  display: flex;\\n}\\n.app-layout .app-layout-navbar {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  z-index: 100;\\n  display: flex;\\n  padding: 8px 0px;\\n  justify-content: space-between;\\n}\\n.app-layout .app-layout-navbar:not(.app-layout-navbar--sidenav) {\\n  padding-left: 16px;\\n}\\n.app-layout .app-layout-navbar--sidenav {\\n  padding-left: 56px;\\n}\\n.app-layout .app-layout-navbar:not(.app-layout-navbar--outlined) {\\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\\n}\\n.app-layout mat-sidenav {\\n  z-index: 101;\\n}\\n.app-layout .app-layout-toggle-menu-btn {\\n  position: fixed;\\n  top: 8px;\\n  left: 8px;\\n  z-index: 102;\\n}\\n.app-layout .app-layout-sidenav-container {\\n  height: 100%;\\n  width: 100%;\\n}\\n.app-layout .app-layout-content {\\n  display: flex;\\n  flex: 1;\\n  padding-top: 56px;\\n  min-height: calc(100vh - 56px);\\n}\\n.app-layout .navbar-home-logo:not(.navbar-home-logo--dense) {\\n  width: 122px;\\n  min-width: 122px;\\n  height: 60px;\\n  margin-top: 32px;\\n  margin-left: 64px;\\n}\\n.app-layout .navbar-home-logo--dense {\\n  width: 61px;\\n  min-width: 61px;\\n  height: 30px;\\n}\\n@media all and (max-width: 600px) {\\n  .app-layout .navbar-home-logo:not(.navbar-home-logo--dense) {\\n    width: 61px;\\n    min-width: 61px;\\n    height: 30px;\\n    margin-top: 0px;\\n    margin-left: 0px;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"","import {\r\n  Component,\r\n  OnInit,\r\n  ViewEncapsulation,\r\n  ViewChild,\r\n  ContentChild\r\n\r\n} from '@angular/core';\r\nimport { NavbarContentComponent } from './navbar-content/navbar-content.component';\r\nimport { SidenavContentComponent } from './sidenav-content/sidenav-content.component';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\n\r\n@Component({\r\n  selector: 'ffdc-app-layout',\r\n  styleUrls: ['./app-layout.component.scss'],\r\n  templateUrl: './app-layout.component.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  host: {\r\n    class: 'app-layout'\r\n  }\r\n})\r\nexport class AppLayoutComponent implements OnInit {\r\n  @ContentChild(NavbarContentComponent, { static: false }) navbarContent: NavbarContentComponent | undefined;\r\n  @ContentChild(SidenavContentComponent, { static: false }) sidenavContent: SidenavContentComponent | undefined;\r\n  @ViewChild('sidenav', { static: false }) sidenav: MatSidenav | undefined;\r\n\r\n\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n\r\n  toggleSidenav() {\r\n    if (this.sidenav) {\r\n      this.sidenav.toggle();\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MaterialModules } from '../../material-modules';\r\n\r\nimport { AppLayoutComponent } from './app-layout.component';\r\nimport { SidenavContentComponent } from './sidenav-content/sidenav-content.component';\r\nimport { NavbarContentComponent } from './navbar-content/navbar-content.component';\r\nimport { NavbarMenuComponent } from './navbar-menu/navbar-menu.component';\r\nimport { NavbarHomeComponent } from './navbar-home/navbar-home.component';\r\nimport { NavbarActionContainerComponent } from './navbar-action-container/navbar-action-container.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NavbarActionItemComponent } from './navbar-action-item/navbar-action-item.component';\r\n\r\n@NgModule({\r\n  imports: [MaterialModules, CommonModule, RouterModule],\r\n  exports: [\r\n    AppLayoutComponent,\r\n    SidenavContentComponent,\r\n    NavbarContentComponent,\r\n    NavbarMenuComponent,\r\n    NavbarHomeComponent,\r\n    NavbarActionContainerComponent,\r\n    NavbarActionItemComponent\r\n  ],\r\n  declarations: [\r\n    AppLayoutComponent,\r\n    SidenavContentComponent,\r\n    NavbarContentComponent,\r\n    NavbarMenuComponent,\r\n    NavbarHomeComponent,\r\n    NavbarActionContainerComponent,\r\n    NavbarActionItemComponent\r\n  ],\r\n  providers: []\r\n})\r\nexport class AppLayoutModule {}\r\n","module.exports = \".navbar-action-container {\\n  display: flex;\\n  flex: 1;\\n  max-width: 360px;\\n  justify-content: flex-end;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hcHAtbGF5b3V0L25hdmJhci1hY3Rpb24tY29udGFpbmVyL0M6XFxVc2Vyc1xcdTcyMjY4NlxcRmluYXN0cmFcXGZmZGMtc2FtcGxlLXJldGFpbC13ZWJhcHAvc3JjXFxhcHBcXGNvbXBvbmVudHNcXGFwcC1sYXlvdXRcXG5hdmJhci1hY3Rpb24tY29udGFpbmVyXFxuYXZiYXItYWN0aW9uLWNvbnRhaW5lci5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY29tcG9uZW50cy9hcHAtbGF5b3V0L25hdmJhci1hY3Rpb24tY29udGFpbmVyL25hdmJhci1hY3Rpb24tY29udGFpbmVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLE9BQUE7RUFDQSxnQkFBQTtFQUNBLHlCQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2FwcC1sYXlvdXQvbmF2YmFyLWFjdGlvbi1jb250YWluZXIvbmF2YmFyLWFjdGlvbi1jb250YWluZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubmF2YmFyLWFjdGlvbi1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleDogMTtcclxuICBtYXgtd2lkdGg6IDM2MHB4O1xyXG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbn1cclxuIiwiLm5hdmJhci1hY3Rpb24tY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleDogMTtcbiAgbWF4LXdpZHRoOiAzNjBweDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbn0iXX0= */\"","import {\r\n  Component,\r\n  OnInit,\r\n  ChangeDetectionStrategy,\r\n  ViewEncapsulation,\r\n  ContentChildren,\r\n  QueryList,\r\n  ChangeDetectorRef,\r\n  AfterContentInit,\r\n  OnDestroy,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport { NavbarActionItemComponent } from '../navbar-action-item/navbar-action-item.component';\r\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\r\nimport { Subject, combineLatest } from 'rxjs';\r\nimport { startWith, takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'ffdc-navbar-action-container',\r\n  templateUrl: './navbar-action-container.component.html',\r\n  styleUrls: ['./navbar-action-container.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  host: {\r\n    class: 'navbar-action-container'\r\n  }\r\n})\r\nexport class NavbarActionContainerComponent implements OnInit, AfterContentInit, OnDestroy {\r\n  @ContentChildren(NavbarActionItemComponent) items!: QueryList<NavbarActionItemComponent>;\r\n\r\n  actionItems?: QueryList<NavbarActionItemComponent>;\r\n  actionMenuItems?: QueryList<NavbarActionItemComponent>;\r\n\r\n  handsetLayout = false;\r\n\r\n  private destroyed$ = new Subject<void>();\r\n\r\n  constructor(private breakpointObserver: BreakpointObserver, private cd: ChangeDetectorRef, private viewContainerRef: ViewContainerRef) {\r\n\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    combineLatest(\r\n      this.breakpointObserver.observe([Breakpoints.Handset]),\r\n      this.items.changes\r\n      .pipe(\r\n        startWith(this.items))\r\n    ).pipe(takeUntil(this.destroyed$)).subscribe(([breakPoint, items]) => {\r\n      if (breakPoint.matches) {\r\n        this.actionItems = undefined;\r\n        this.actionMenuItems = items;\r\n      } else {\r\n        this.actionItems = items;\r\n        this.actionMenuItems = undefined;\r\n      }\r\n      this.cd.markForCheck();\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYXBwLWxheW91dC9uYXZiYXItYWN0aW9uLWl0ZW0vbmF2YmFyLWFjdGlvbi1pdGVtLmNvbXBvbmVudC5zY3NzIn0= */\"","import {\r\n  Component,\r\n  OnInit,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n  Input,\r\n  ViewChild,\r\n  ElementRef,\r\n  AfterViewInit,\r\n  TemplateRef,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport { Template } from '@angular/compiler/src/render3/r3_ast';\r\nimport { TemplatePortal } from '@angular/cdk/portal';\r\n\r\n@Component({\r\n  selector: 'ffdc-navbar-action-item',\r\n  templateUrl: './navbar-action-item.component.html',\r\n  styleUrls: ['./navbar-action-item.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class NavbarActionItemComponent implements OnInit, AfterViewInit {\r\n  @Input() icon!: string;\r\n  @Input() title!: string;\r\n\r\n  @ViewChild('menuItem', { static: true }) menuItemTemplate!: TemplateRef<any>;\r\n  @ViewChild('actionItem', { static: true }) actionItemTemplate!: TemplateRef<any>;\r\n\r\n\r\n\r\n  hasContent = false;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n\r\n  ngAfterViewInit() {\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  ViewEncapsulation,\r\n  OnInit,\r\n  ViewChild,\r\n  Input\r\n} from '@angular/core';\r\nimport { TemplatePortal } from '@angular/cdk/portal';\r\n\r\n@Component({\r\n  selector: 'ffdc-navbar-content',\r\n  templateUrl: 'navbar-content.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NavbarContentComponent implements OnInit {\r\n  @ViewChild(TemplateRef, {static: true}) implicitContent!: TemplateRef<any>;\r\n\r\n  @Input() outlined = false;\r\n\r\n  private contentPortal: TemplatePortal | null = null;\r\n\r\n  get content(): TemplatePortal | null {\r\n    return this.contentPortal;\r\n  }\r\n\r\n  constructor(private viewContainerRef: ViewContainerRef) {}\r\n\r\n  ngOnInit(): void {\r\n    this.contentPortal = new TemplatePortal(this.implicitContent, this.viewContainerRef);\r\n  }\r\n}\r\n","module.exports = \".navbar-home {\\n  display: flex;\\n  align-items: center;\\n  padding: 0px 16px 0px 8px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hcHAtbGF5b3V0L25hdmJhci1ob21lL0M6XFxVc2Vyc1xcdTcyMjY4NlxcRmluYXN0cmFcXGZmZGMtc2FtcGxlLXJldGFpbC13ZWJhcHAvc3JjXFxhcHBcXGNvbXBvbmVudHNcXGFwcC1sYXlvdXRcXG5hdmJhci1ob21lXFxuYXZiYXItaG9tZS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY29tcG9uZW50cy9hcHAtbGF5b3V0L25hdmJhci1ob21lL25hdmJhci1ob21lLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EseUJBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYXBwLWxheW91dC9uYXZiYXItaG9tZS9uYXZiYXItaG9tZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uYXZiYXItaG9tZSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIHBhZGRpbmc6IDBweCAxNnB4IDBweCA4cHg7XHJcbn1cclxuIiwiLm5hdmJhci1ob21lIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcGFkZGluZzogMHB4IDE2cHggMHB4IDhweDtcbn0iXX0= */\"","import { Component, OnInit, ChangeDetectionStrategy, Input, Output, EventEmitter, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ffdc-navbar-home',\r\n  templateUrl: './navbar-home.component.html',\r\n  styleUrls: ['./navbar-home.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    class: 'navbar-home'\r\n  }\r\n})\r\nexport class NavbarHomeComponent implements OnInit {\r\n\r\n  @Input() dense = true;\r\n\r\n  @Input() homeUrl?: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".navbar-menu {\\n  display: flex;\\n  align-items: center;\\n  flex: 1;\\n}\\n.navbar-menu .navbar-menu-breadcrumb__first-item {\\n  font: 700 14px/16px \\\"futura-pt\\\", \\\"Futura EF\\\", Futura, \\\"Arial Black\\\", \\\"Century Gothic\\\";\\n  padding: 0 16px;\\n}\\n.navbar-menu .navbar-breadcrumb-label {\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n}\\n.navbar-menu ul {\\n  margin: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hcHAtbGF5b3V0L25hdmJhci1tZW51L0M6XFxVc2Vyc1xcdTcyMjY4NlxcRmluYXN0cmFcXGZmZGMtc2FtcGxlLXJldGFpbC13ZWJhcHAvc3JjXFxhcHBcXGNvbXBvbmVudHNcXGFwcC1sYXlvdXRcXG5hdmJhci1tZW51XFxuYXZiYXItbWVudS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY29tcG9uZW50cy9hcHAtbGF5b3V0L25hdmJhci1tZW51L25hdmJhci1tZW51LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsT0FBQTtBQ0NGO0FEQUU7RUFDRSxxRkFBQTtFQUNBLGVBQUE7QUNFSjtBREFFO0VBQ0UseUJBQUE7S0FBQSxzQkFBQTtNQUFBLHFCQUFBO1VBQUEsaUJBQUE7QUNFSjtBREFFO0VBQ0UsU0FBQTtBQ0VKIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9hcHAtbGF5b3V0L25hdmJhci1tZW51L25hdmJhci1tZW51LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5hdmJhci1tZW51IHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgZmxleDogMTtcclxuICAubmF2YmFyLW1lbnUtYnJlYWRjcnVtYl9fZmlyc3QtaXRlbSB7XHJcbiAgICBmb250OiA3MDAgMTRweC8xNnB4IFwiZnV0dXJhLXB0XCIsIFwiRnV0dXJhIEVGXCIsIEZ1dHVyYSwgXCJBcmlhbCBCbGFja1wiLCBcIkNlbnR1cnkgR290aGljXCI7XHJcbiAgICBwYWRkaW5nOiAwIDE2cHg7XHJcbiAgfVxyXG4gIC5uYXZiYXItYnJlYWRjcnVtYi1sYWJlbCB7XHJcbiAgICB1c2VyLXNlbGVjdDogbm9uZTtcclxuICB9XHJcbiAgdWwge1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gIH1cclxufVxyXG4iLCIubmF2YmFyLW1lbnUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmbGV4OiAxO1xufVxuLm5hdmJhci1tZW51IC5uYXZiYXItbWVudS1icmVhZGNydW1iX19maXJzdC1pdGVtIHtcbiAgZm9udDogNzAwIDE0cHgvMTZweCBcImZ1dHVyYS1wdFwiLCBcIkZ1dHVyYSBFRlwiLCBGdXR1cmEsIFwiQXJpYWwgQmxhY2tcIiwgXCJDZW50dXJ5IEdvdGhpY1wiO1xuICBwYWRkaW5nOiAwIDE2cHg7XG59XG4ubmF2YmFyLW1lbnUgLm5hdmJhci1icmVhZGNydW1iLWxhYmVsIHtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG59XG4ubmF2YmFyLW1lbnUgdWwge1xuICBtYXJnaW46IDA7XG59Il19 */\"","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { NavigationNode } from '../navigation-node';\r\nimport { Router } from '@angular/router';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\n\r\n@Component({\r\n  selector: 'ffdc-navbar-menu',\r\n  templateUrl: './navbar-menu.component.html',\r\n  styleUrls: ['./navbar-menu.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    class: 'navbar-menu'\r\n  }\r\n})\r\nexport class NavbarMenuComponent implements OnInit, OnChanges {\r\n  @Input() navigationNodes: NavigationNode[] | undefined;\r\n  @Input() displayMode: 'breadcrumb' | 'default' = 'breadcrumb';\r\n\r\n  /*\r\n   * Only applicable in default mode, this value specifies selected item index in navigationNodes array.\r\n   * In breadcrumb mode, selectedIndex always is the lasted item in navigationNodes array.\r\n   */\r\n  @Input() selectedIndex = -1;\r\n\r\n  lastNagivationNodeChildren: NavigationNode[] | undefined;\r\n  canGoBack = false;\r\n  activeNode: NavigationNode | undefined;\r\n  handsetLayout = false;\r\n\r\n  private lastActivatedUrl: string | undefined;\r\n\r\n  constructor(private router: Router, private breakpointObserver: BreakpointObserver, private cd: ChangeDetectorRef) {\r\n    breakpointObserver.observe([Breakpoints.Handset]).subscribe(result => {\r\n      if (result.matches && this.handsetLayout === false) {\r\n        this.handsetLayout = true;\r\n        this.cd.markForCheck();\r\n      } else if (this.handsetLayout === true) {\r\n        this.handsetLayout = false;\r\n        this.cd.markForCheck();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.updateState();\r\n  }\r\n\r\n  goBack() {\r\n    if (this.lastActivatedUrl) {\r\n      const previousUrl = this.lastActivatedUrl;\r\n      this.lastActivatedUrl = undefined;\r\n      this.router.navigateByUrl(previousUrl);\r\n    } else {\r\n      const parentNode = this.getParentActiveNode();\r\n      if (parentNode && parentNode.url) {\r\n        // TODO: Should find the nearest node which has url value.\r\n        this.router.navigateByUrl(parentNode.url);\r\n      }\r\n    }\r\n  }\r\n\r\n  getParentActiveNode(): NavigationNode | undefined {\r\n    if (this.navigationNodes && this.navigationNodes.length > 1) {\r\n      return this.navigationNodes[this.navigationNodes.length - 2];\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  private updateState() {\r\n    if (this.displayMode === 'breadcrumb') {\r\n      this.activeNode =\r\n        this.navigationNodes && this.navigationNodes.length > 0 ? this.navigationNodes[this.navigationNodes.length - 1] : undefined;\r\n      this.canGoBack = this.activeNode ? !!this.activeNode.canGoBack : false;\r\n      this.lastActivatedUrl = this.activeNode ? this.activeNode.url : this.lastActivatedUrl;\r\n      const parentActiveNode = this.getParentActiveNode();\r\n      this.lastNagivationNodeChildren =\r\n        parentActiveNode && parentActiveNode.showOtherChildren ? parentActiveNode.children : undefined;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Component,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n  ViewChild,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n  OnInit\r\n} from '@angular/core';\r\nimport { TemplatePortal } from '@angular/cdk/portal';\r\n\r\n@Component({\r\n  selector: 'ffdc-sidenav-content',\r\n  templateUrl: 'sidenav-content.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SidenavContentComponent implements OnInit {\r\n  @ViewChild(TemplateRef, { static: true }) implicitContent!: TemplateRef<any>;\r\n\r\n  private contentPortal: TemplatePortal | null = null;\r\n\r\n  get content(): TemplatePortal | null {\r\n    return this.contentPortal;\r\n  }\r\n\r\n  constructor(private viewContainerRef: ViewContainerRef) {}\r\n\r\n  ngOnInit(): void {\r\n    this.contentPortal = new TemplatePortal(this.implicitContent, this.viewContainerRef);\r\n  }\r\n}\r\n","import { Component, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ffdc-donations-banner',\r\n  templateUrl: 'donations-banner.component.html'\r\n})\r\nexport class DonationsBannerComponent {\r\n  donationsBanner = {\r\n    enabled: true,\r\n    content: {\r\n      id: 123,\r\n      title: 'Donate to Red Cross',\r\n      dismissButtonText: 'Dismiss',\r\n      actionButtonText: 'Donate again',\r\n      announcement: 'Consider donating again to the same organisation again!',\r\n      icon: 'alarm_on'\r\n    }\r\n  };\r\n\r\n  @Output() action = new EventEmitter<any>();\r\n\r\n  onAction() {\r\n    this.onDismiss();\r\n    this.action.emit();\r\n  }\r\n\r\n  onDismiss() {\r\n    this.donationsBanner.enabled = false;\r\n  }\r\n\r\n  constructor() {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { DonationsBannerComponent } from './donations-banner.component';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport { MaterialModules } from '../../material-modules';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule, CommonModule, MatToolbarModule, FlexLayoutModule, MatIconModule, MaterialModules],\r\n  exports: [DonationsBannerComponent],\r\n  declarations: [DonationsBannerComponent]\r\n})\r\nexport class BannerModule {}\r\n","module.exports = \".account-transaction {\\n  display: flex;\\n  flex-direction: column;\\n}\\n.account-transaction .account-transaction-header {\\n  display: flex;\\n  justify-content: space-between;\\n  flex: 1;\\n  padding-bottom: 16px;\\n}\\n.account-transaction .account-transaction-header .mat-form-field-underline {\\n  display: none;\\n}\\n.account-transaction .account-transaction-spinner {\\n  display: flex;\\n  justify-content: center;\\n  padding: 32px 0px;\\n}\\n.account-transaction .no-transactions {\\n  text-align: center;\\n}\\n.account-transaction .no-transactions mat-icon {\\n  -webkit-transform: scale(5);\\n          transform: scale(5);\\n  margin: 70px 0 40px;\\n}\\n@media all and (max-width: 600px) {\\n  .account-transaction #searchBtn {\\n    display: none;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGFpbmVycy9hY2NvdW50LXRyYW5zYWN0aW9uL0M6XFxVc2Vyc1xcdTcyMjY4NlxcRmluYXN0cmFcXGZmZGMtc2FtcGxlLXJldGFpbC13ZWJhcHAvc3JjXFxhcHBcXGNvbnRhaW5lcnNcXGFjY291bnQtdHJhbnNhY3Rpb25cXGFjY291bnQtdHJhbnNhY3Rpb24uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2NvbnRhaW5lcnMvYWNjb3VudC10cmFuc2FjdGlvbi9hY2NvdW50LXRyYW5zYWN0aW9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0FDQ0Y7QURBRTtFQUNFLGFBQUE7RUFDQSw4QkFBQTtFQUNBLE9BQUE7RUFDQSxvQkFBQTtBQ0VKO0FEQUk7RUFDRSxhQUFBO0FDRU47QURDRTtFQUNFLGFBQUE7RUFDQSx1QkFBQTtFQUNBLGlCQUFBO0FDQ0o7QURFRTtFQUNFLGtCQUFBO0FDQUo7QURFSTtFQUNFLDJCQUFBO1VBQUEsbUJBQUE7RUFDQSxtQkFBQTtBQ0FOO0FES0U7RUFDRTtJQUNFLGFBQUE7RUNISjtBQUNGIiwiZmlsZSI6InNyYy9hcHAvY29udGFpbmVycy9hY2NvdW50LXRyYW5zYWN0aW9uL2FjY291bnQtdHJhbnNhY3Rpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWNjb3VudC10cmFuc2FjdGlvbiB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIC5hY2NvdW50LXRyYW5zYWN0aW9uLWhlYWRlciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgZmxleDogMTtcclxuICAgIHBhZGRpbmctYm90dG9tOiAxNnB4O1xyXG5cclxuICAgIC5tYXQtZm9ybS1maWVsZC11bmRlcmxpbmUge1xyXG4gICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG4gIH1cclxuICAuYWNjb3VudC10cmFuc2FjdGlvbi1zcGlubmVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIHBhZGRpbmc6IDMycHggMHB4O1xyXG4gIH1cclxuXHJcbiAgLm5vLXRyYW5zYWN0aW9ucyB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG4gICAgbWF0LWljb24ge1xyXG4gICAgICB0cmFuc2Zvcm06IHNjYWxlKDUpO1xyXG4gICAgICBtYXJnaW46IDcwcHggMCA0MHB4O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcblxyXG4gIEBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7XHJcbiAgICAjc2VhcmNoQnRuIHtcclxuICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIiwiLmFjY291bnQtdHJhbnNhY3Rpb24ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuLmFjY291bnQtdHJhbnNhY3Rpb24gLmFjY291bnQtdHJhbnNhY3Rpb24taGVhZGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBmbGV4OiAxO1xuICBwYWRkaW5nLWJvdHRvbTogMTZweDtcbn1cbi5hY2NvdW50LXRyYW5zYWN0aW9uIC5hY2NvdW50LXRyYW5zYWN0aW9uLWhlYWRlciAubWF0LWZvcm0tZmllbGQtdW5kZXJsaW5lIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5hY2NvdW50LXRyYW5zYWN0aW9uIC5hY2NvdW50LXRyYW5zYWN0aW9uLXNwaW5uZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgcGFkZGluZzogMzJweCAwcHg7XG59XG4uYWNjb3VudC10cmFuc2FjdGlvbiAubm8tdHJhbnNhY3Rpb25zIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLmFjY291bnQtdHJhbnNhY3Rpb24gLm5vLXRyYW5zYWN0aW9ucyBtYXQtaWNvbiB7XG4gIHRyYW5zZm9ybTogc2NhbGUoNSk7XG4gIG1hcmdpbjogNzBweCAwIDQwcHg7XG59XG5AbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA2MDBweCkge1xuICAuYWNjb3VudC10cmFuc2FjdGlvbiAjc2VhcmNoQnRuIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59Il19 */\"","import {\r\n  Component,\r\n  OnInit,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n  OnDestroy,\r\n  ChangeDetectorRef,\r\n  Input\r\n} from '@angular/core';\r\nimport { Store, select } from '@ngrx/store';\r\nimport {\r\n  AppState,\r\n  selectAccountTransactionsWithAccountInfo,\r\n  isSearchingAccountTransactions,\r\n  selectTransactionsDate,\r\n  selectAccountTransactionsWithAccountInfoForAccount\r\n} from '../../store/reducers';\r\nimport {\r\n  searchAllAccountTransactions,\r\n  searchAccountTransactions,\r\n  updateTransactionsSelectedDate\r\n} from '../../store/actions/account-transaction.actions';\r\nimport { Observable, Subject, BehaviorSubject, combineLatest, of, iif, ReplaySubject } from 'rxjs';\r\nimport { AccountTransaction } from '../../store/models';\r\nimport { dateFormat } from '../../utils';\r\nimport { takeUntil, map, mergeMap, switchMap, take } from 'rxjs/operators';\r\nimport { MatDatepicker } from '@angular/material/datepicker';\r\n@Component({\r\n  selector: 'ffdc-account-transaction',\r\n  templateUrl: './account-transaction.component.html',\r\n  styleUrls: ['./account-transaction.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    class: 'account-transaction'\r\n  }\r\n})\r\nexport class AccountTransactionComponent implements OnInit, OnDestroy {\r\n  // tslint:disable-next-line: variable-name\r\n  private _accountId: string | undefined;\r\n\r\n  @Input()\r\n  public get accountId(): string | undefined {\r\n    return this._accountId;\r\n  }\r\n  public set accountId(value: string | undefined) {\r\n    this._accountId = value;\r\n    if (value) {\r\n      this.store.pipe(select(selectTransactionsDate), take(1)).subscribe(selectedDate => {\r\n        this.store.dispatch(\r\n          searchAccountTransactions({ accountId: value, filter: { startDate: dateFormat(selectedDate) } })\r\n        );\r\n      });\r\n      this.accountId$.next(value);\r\n    }\r\n  }\r\n  @Input() showAllAccount = false;\r\n\r\n  accountTransactions: AccountTransaction[] = [];\r\n  maxDate: Date;\r\n  selectedDate!: Date;\r\n  selectedDateLabel$ = new ReplaySubject<string>(1);\r\n  selectedTabIndex = 0;\r\n  selectedTabIndex$ = new BehaviorSubject(0);\r\n  searching$!: Observable<boolean>;\r\n\r\n  private accountId$ = new ReplaySubject<string>(1);\r\n  private destroyed$ = new Subject<void>();\r\n\r\n  constructor(private store: Store<AppState>, private cd: ChangeDetectorRef) {\r\n    this.maxDate = new Date();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.store.pipe(select(selectTransactionsDate)).subscribe(selectedDate => {\r\n      this.selectedDate = selectedDate;\r\n      const dateLabel = dateFormat(selectedDate, 'MMMM YYYY');\r\n      this.selectedDateLabel$.next(dateLabel);\r\n    });\r\n    if (this.showAllAccount) {\r\n      this.store.dispatch(searchAllAccountTransactions({ filter: { startDate: dateFormat(this.selectedDate) } }));\r\n    }\r\n    const getAllOrSingleAccountTransaction = iif(\r\n      () => this.showAllAccount,\r\n      this.store.pipe(select(selectAccountTransactionsWithAccountInfo)),\r\n      this.accountId$.pipe(\r\n        switchMap(accountId =>\r\n          this.store.pipe(\r\n            select(selectAccountTransactionsWithAccountInfoForAccount, { accountId })\r\n          )\r\n        )\r\n      )\r\n    );\r\n\r\n    combineLatest(this.selectedTabIndex$, getAllOrSingleAccountTransaction)\r\n      .pipe(\r\n        map(([index, accountTransactions]) => {\r\n          if (index === 1) {\r\n            return accountTransactions.filter(transaction => transaction.transactionAmount > 0);\r\n          } else if (index === 2) {\r\n            return accountTransactions.filter(transaction => transaction.transactionAmount < 0);\r\n          }\r\n\r\n          return accountTransactions;\r\n        }),\r\n        takeUntil(this.destroyed$)\r\n      )\r\n      .subscribe(accountTransactions => {\r\n        this.accountTransactions = accountTransactions;\r\n        console.log(this.accountTransactions);\r\n        this.cd.markForCheck();\r\n      });\r\n    this.searching$ = this.store.pipe(select(isSearchingAccountTransactions));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n\r\n  setSelectedTabIndex(index: number) {\r\n    this.selectedTabIndex = index;\r\n    this.selectedTabIndex$.next(index);\r\n  }\r\n\r\n  chosenMonthHandler(selectedDate: Date, datepicker: MatDatepicker<any>) {\r\n    datepicker.close();\r\n    const startDate = new Date(selectedDate.setDate(1));\r\n    const endDate = new Date(selectedDate.setDate(this.getLastDayOfMonth(selectedDate)));\r\n    const filter = {\r\n      startDate: dateFormat(startDate),\r\n      endDate: dateFormat(endDate)\r\n    };\r\n    if (this.showAllAccount) {\r\n      this.store.dispatch(searchAllAccountTransactions({filter}));\r\n    } else {\r\n      this.store.dispatch(\r\n        searchAccountTransactions({accountId: (this.accountId as string), filter})\r\n      );\r\n    }\r\n\r\n    this.store.dispatch(\r\n      updateTransactionsSelectedDate({selectedDate: startDate})\r\n    );\r\n  }\r\n\r\n  getLastDayOfMonth(date: Date): number {\r\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AccountTransactionComponent } from './account-transaction.component';\r\nimport { MaterialModules } from '../../material-modules';\r\nimport { AccountTransactionListModule } from '../../components/account-transaction-list/account-transaction-list.module';\r\n\r\n@NgModule({\r\n  declarations: [AccountTransactionComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MaterialModules,\r\n    AccountTransactionListModule\r\n  ],\r\n  exports: [AccountTransactionComponent]\r\n})\r\nexport class AccountTransactionModule { }\r\n","module.exports = \".donations-page {\\n  display: flex;\\n  flex: 1;\\n  flex-direction: column;\\n  padding-bottom: 32px;\\n}\\n.donations-page .donations-page-overview {\\n  display: flex;\\n  flex-grow: 100%;\\n  margin-bottom: 32px;\\n  padding: 32px 64px 32px 64px;\\n  flex-direction: column;\\n}\\n.donations-page .donations-page-overview .account-page-acount-overview-info {\\n  display: flex;\\n  padding-top: 32px;\\n  align-items: center;\\n}\\n.donations-page .donations-page-overview .account-page-acount-overview-info .account-page-acount-overview-info-detail {\\n  display: flex;\\n  flex-direction: column;\\n  padding-right: 64px;\\n}\\n.donations-page .donations-page-overview .account-page-acount-overview-info .account-page-acount-overview-info-detail .uxg-subtitle-2 {\\n  padding-bottom: 8px;\\n  margin-top: 16px;\\n}\\n.donations-page .donations-page-overview .account-page-acount-overview-info .space {\\n  flex: 1;\\n}\\n.donations-page .donations-page-overview .account-page-acount-overview-info .account-page-acount-overview-info-action {\\n  display: flex;\\n  min-width: 196px;\\n  justify-content: space-between;\\n}\\n.donations-page .donations-page-overview .donate-button {\\n  border-radius: 10px !important;\\n  width: 10%;\\n  height: 12vh;\\n  margin-right: 8px;\\n}\\n.donations-page .account-page-content {\\n  padding-left: 64px;\\n  padding-right: 64px;\\n  display: flex;\\n  flex-grow: 100%;\\n}\\n.donations-page .account-page-content .account-page-content-column {\\n  display: flex;\\n  flex-direction: column;\\n  flex: 50%;\\n}\\n@media all and (max-width: 600px) {\\n  .donations-page .account-page-acount-overview {\\n    padding: 16px 32px 16px 32px;\\n  }\\n  .donations-page .account-page-acount-overview .round-icon {\\n    display: none;\\n  }\\n  .donations-page .account-page-acount-overview .account-page-acount-overview-info {\\n    padding-top: 8px;\\n    flex-direction: column;\\n    align-items: end;\\n  }\\n  .donations-page .account-page-content {\\n    padding-left: 16px;\\n    padding-right: 16px;\\n    flex-direction: column;\\n  }\\n  .donations-page .account-page-content .account-page-content-column {\\n    flex: 1;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGFpbmVycy9kb25hdGlvbnMtcGFnZS9DOlxcVXNlcnNcXHU3MjI2ODZcXEZpbmFzdHJhXFxmZmRjLXNhbXBsZS1yZXRhaWwtd2ViYXBwL3NyY1xcYXBwXFxjb250YWluZXJzXFxkb25hdGlvbnMtcGFnZVxcZG9uYXRpb25zLXBhZ2UuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2NvbnRhaW5lcnMvZG9uYXRpb25zLXBhZ2UvZG9uYXRpb25zLXBhZ2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0EsT0FBQTtFQUNBLHNCQUFBO0VBQ0Esb0JBQUE7QUNDSjtBREFJO0VBQ0UsYUFBQTtFQUNBLGVBQUE7RUFDQSxtQkFBQTtFQUNBLDRCQUFBO0VBQ0Esc0JBQUE7QUNFTjtBREFNO0VBQ0UsYUFBQTtFQUNBLGlCQUFBO0VBQ0EsbUJBQUE7QUNFUjtBRERRO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsbUJBQUE7QUNHVjtBREZVO0VBQ0UsbUJBQUE7RUFDQSxnQkFBQTtBQ0laO0FERFE7RUFDRSxPQUFBO0FDR1Y7QUREUTtFQUNFLGFBQUE7RUFDQSxnQkFBQTtFQUNBLDhCQUFBO0FDR1Y7QURBUTtFQUNJLDhCQUFBO0VBQ0EsVUFBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtBQ0VaO0FEQ0k7RUFDRSxrQkFBQTtFQUNBLG1CQUFBO0VBQ0EsYUFBQTtFQUNBLGVBQUE7QUNDTjtBREFNO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsU0FBQTtBQ0VSO0FERUk7RUFDRTtJQUNFLDRCQUFBO0VDQU47RURFTTtJQUNFLGFBQUE7RUNBUjtFREVNO0lBQ0UsZ0JBQUE7SUFDQSxzQkFBQTtJQUNBLGdCQUFBO0VDQVI7RURHSTtJQUNFLGtCQUFBO0lBQ0EsbUJBQUE7SUFDQSxzQkFBQTtFQ0ROO0VERU07SUFDRSxPQUFBO0VDQVI7QUFDRiIsImZpbGUiOiJzcmMvYXBwL2NvbnRhaW5lcnMvZG9uYXRpb25zLXBhZ2UvZG9uYXRpb25zLXBhZ2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZG9uYXRpb25zLXBhZ2Uge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXg6IDE7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDMycHg7XHJcbiAgICAuZG9uYXRpb25zLXBhZ2Utb3ZlcnZpZXcge1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBmbGV4LWdyb3c6IDEwMCU7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDMycHg7XHJcbiAgICAgIHBhZGRpbmc6IDMycHggNjRweCAzMnB4IDY0cHg7XHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgXHJcbiAgICAgIC5hY2NvdW50LXBhZ2UtYWNvdW50LW92ZXJ2aWV3LWluZm8ge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgcGFkZGluZy10b3A6IDMycHg7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAuYWNjb3VudC1wYWdlLWFjb3VudC1vdmVydmlldy1pbmZvLWRldGFpbCB7XHJcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDY0cHg7XHJcbiAgICAgICAgICAudXhnLXN1YnRpdGxlLTIgIHtcclxuICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDhweDtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogMTZweDtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgLnNwYWNlIHtcclxuICAgICAgICAgIGZsZXg6IDE7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5hY2NvdW50LXBhZ2UtYWNvdW50LW92ZXJ2aWV3LWluZm8tYWN0aW9uIHtcclxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICBtaW4td2lkdGg6IDE5NnB4O1xyXG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAgIC5kb25hdGUtYnV0dG9uIHtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweCAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICB3aWR0aDogMTAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEydmg7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogOHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC5hY2NvdW50LXBhZ2UtY29udGVudCB7XHJcbiAgICAgIHBhZGRpbmctbGVmdDogNjRweDtcclxuICAgICAgcGFkZGluZy1yaWdodDogNjRweDtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgZmxleC1ncm93OiAxMDAlO1xyXG4gICAgICAuYWNjb3VudC1wYWdlLWNvbnRlbnQtY29sdW1uIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgZmxleDogNTAlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgXHJcbiAgICBAbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA2MDBweCkge1xyXG4gICAgICAuYWNjb3VudC1wYWdlLWFjb3VudC1vdmVydmlldyB7XHJcbiAgICAgICAgcGFkZGluZzogMTZweCAzMnB4IDE2cHggMzJweDtcclxuICBcclxuICAgICAgICAucm91bmQtaWNvbiB7XHJcbiAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIH1cclxuICAgICAgICAuYWNjb3VudC1wYWdlLWFjb3VudC1vdmVydmlldy1pbmZvIHtcclxuICAgICAgICAgIHBhZGRpbmctdG9wOiA4cHg7XHJcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgICAgYWxpZ24taXRlbXM6IGVuZDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgLmFjY291bnQtcGFnZS1jb250ZW50IHtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDE2cHg7XHJcbiAgICAgICAgcGFkZGluZy1yaWdodDogMTZweDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIC5hY2NvdW50LXBhZ2UtY29udGVudC1jb2x1bW4ge1xyXG4gICAgICAgICAgZmxleDogMVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gIFxyXG4gICAgfVxyXG4gIH1cclxuICAiLCIuZG9uYXRpb25zLXBhZ2Uge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4OiAxO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBwYWRkaW5nLWJvdHRvbTogMzJweDtcbn1cbi5kb25hdGlvbnMtcGFnZSAuZG9uYXRpb25zLXBhZ2Utb3ZlcnZpZXcge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWdyb3c6IDEwMCU7XG4gIG1hcmdpbi1ib3R0b206IDMycHg7XG4gIHBhZGRpbmc6IDMycHggNjRweCAzMnB4IDY0cHg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG4uZG9uYXRpb25zLXBhZ2UgLmRvbmF0aW9ucy1wYWdlLW92ZXJ2aWV3IC5hY2NvdW50LXBhZ2UtYWNvdW50LW92ZXJ2aWV3LWluZm8ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBwYWRkaW5nLXRvcDogMzJweDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi5kb25hdGlvbnMtcGFnZSAuZG9uYXRpb25zLXBhZ2Utb3ZlcnZpZXcgLmFjY291bnQtcGFnZS1hY291bnQtb3ZlcnZpZXctaW5mbyAuYWNjb3VudC1wYWdlLWFjb3VudC1vdmVydmlldy1pbmZvLWRldGFpbCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIHBhZGRpbmctcmlnaHQ6IDY0cHg7XG59XG4uZG9uYXRpb25zLXBhZ2UgLmRvbmF0aW9ucy1wYWdlLW92ZXJ2aWV3IC5hY2NvdW50LXBhZ2UtYWNvdW50LW92ZXJ2aWV3LWluZm8gLmFjY291bnQtcGFnZS1hY291bnQtb3ZlcnZpZXctaW5mby1kZXRhaWwgLnV4Zy1zdWJ0aXRsZS0yIHtcbiAgcGFkZGluZy1ib3R0b206IDhweDtcbiAgbWFyZ2luLXRvcDogMTZweDtcbn1cbi5kb25hdGlvbnMtcGFnZSAuZG9uYXRpb25zLXBhZ2Utb3ZlcnZpZXcgLmFjY291bnQtcGFnZS1hY291bnQtb3ZlcnZpZXctaW5mbyAuc3BhY2Uge1xuICBmbGV4OiAxO1xufVxuLmRvbmF0aW9ucy1wYWdlIC5kb25hdGlvbnMtcGFnZS1vdmVydmlldyAuYWNjb3VudC1wYWdlLWFjb3VudC1vdmVydmlldy1pbmZvIC5hY2NvdW50LXBhZ2UtYWNvdW50LW92ZXJ2aWV3LWluZm8tYWN0aW9uIHtcbiAgZGlzcGxheTogZmxleDtcbiAgbWluLXdpZHRoOiAxOTZweDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xufVxuLmRvbmF0aW9ucy1wYWdlIC5kb25hdGlvbnMtcGFnZS1vdmVydmlldyAuZG9uYXRlLWJ1dHRvbiB7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHggIWltcG9ydGFudDtcbiAgd2lkdGg6IDEwJTtcbiAgaGVpZ2h0OiAxMnZoO1xuICBtYXJnaW4tcmlnaHQ6IDhweDtcbn1cbi5kb25hdGlvbnMtcGFnZSAuYWNjb3VudC1wYWdlLWNvbnRlbnQge1xuICBwYWRkaW5nLWxlZnQ6IDY0cHg7XG4gIHBhZGRpbmctcmlnaHQ6IDY0cHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZ3JvdzogMTAwJTtcbn1cbi5kb25hdGlvbnMtcGFnZSAuYWNjb3VudC1wYWdlLWNvbnRlbnQgLmFjY291bnQtcGFnZS1jb250ZW50LWNvbHVtbiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGZsZXg6IDUwJTtcbn1cbkBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7XG4gIC5kb25hdGlvbnMtcGFnZSAuYWNjb3VudC1wYWdlLWFjb3VudC1vdmVydmlldyB7XG4gICAgcGFkZGluZzogMTZweCAzMnB4IDE2cHggMzJweDtcbiAgfVxuICAuZG9uYXRpb25zLXBhZ2UgLmFjY291bnQtcGFnZS1hY291bnQtb3ZlcnZpZXcgLnJvdW5kLWljb24ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLmRvbmF0aW9ucy1wYWdlIC5hY2NvdW50LXBhZ2UtYWNvdW50LW92ZXJ2aWV3IC5hY2NvdW50LXBhZ2UtYWNvdW50LW92ZXJ2aWV3LWluZm8ge1xuICAgIHBhZGRpbmctdG9wOiA4cHg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogZW5kO1xuICB9XG4gIC5kb25hdGlvbnMtcGFnZSAuYWNjb3VudC1wYWdlLWNvbnRlbnQge1xuICAgIHBhZGRpbmctbGVmdDogMTZweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxNnB4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cbiAgLmRvbmF0aW9ucy1wYWdlIC5hY2NvdW50LXBhZ2UtY29udGVudCAuYWNjb3VudC1wYWdlLWNvbnRlbnQtY29sdW1uIHtcbiAgICBmbGV4OiAxO1xuICB9XG59Il19 */\"","import {\r\n  Component,\r\n  OnInit,\r\n  ChangeDetectionStrategy,\r\n  ViewEncapsulation,\r\n  OnDestroy,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { AccountEntity, AllAccountsOverview } from '../../store/models';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { AppState, selectAllAccounts } from '../../store/reducers';\r\nimport { AccountActions } from '../../store/actions';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { AccountService } from '../../services/account.service';\r\nimport {FormControl, Validators} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'ffdc-donations-page',\r\n  templateUrl: './donations-page.component.html',\r\n  styleUrls: ['./donations-page.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    class: 'donations-page'\r\n  }\r\n})\r\nexport class DonationsPageComponent implements OnInit, OnDestroy {\r\n  accounts: AccountEntity[] = [];\r\n  allAcountsOverview: AllAccountsOverview = { current: 0, available: 0 };\r\n  selectedAccount: any;\r\n  donationAmmount: number = 0;\r\n  donationInterval: number = 0;\r\n\r\n  private destroyed$ = new Subject<any>();\r\n\r\n  constructor(private accountService: AccountService, private store: Store<AppState>, private cd: ChangeDetectorRef) {}\r\n\r\n  ngOnInit() {\r\n    this.store.dispatch(AccountActions.loadExtendedAndDetailedAccounts());\r\n    this.store\r\n      .pipe(\r\n        select(selectAllAccounts),\r\n        takeUntil(this.destroyed$)\r\n      )\r\n      .subscribe(accounts => {\r\n        this.accounts = accounts;\r\n       \r\n        this.allAcountsOverview = this.accountService.getAllAcountOverview(accounts);\r\n        this.cd.markForCheck();\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    console.log(\"this.accounts\", this.accounts);\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n\r\n  setInterval(interval:number) {\r\n    this.donationInterval = interval;\r\n    console.log(\"donationInterval\", this.donationInterval);\r\n    console.log(\"donationAmmount\", this.donationAmmount);\r\n    console.log(\"selectedAccount\", this.selectedAccount);\r\n  }\r\n\r\n  \r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DonationsPageComponent } from './donations-page.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AccountListModule } from '../../components/account-list/account-list.module';\r\nimport { AccountTransactionModule } from '../account-transaction/account-transaction.module';\r\nimport { MaterialModules } from '../../material-modules';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [DonationsPageComponent],\r\n  imports: [\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    RouterModule,\r\n    MaterialModules,\r\n    AccountListModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        component: DonationsPageComponent\r\n      }\r\n    ]),\r\n    AccountTransactionModule\r\n  ],\r\n  exports: [DonationsPageComponent],\r\n  entryComponents: [DonationsPageComponent]\r\n})\r\n\r\nexport class DonationsPageModule {}\r\n","module.exports = \".home-page {\\n  display: flex;\\n  flex: 1;\\n  flex-direction: column;\\n  padding-left: 248px;\\n}\\n.home-page .home-page-welcome {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 128px 0px 64px 32px;\\n}\\n.home-page .home-page-product-list {\\n  display: flex;\\n  align-items: baseline;\\n  justify-content: left;\\n  flex-wrap: wrap;\\n}\\n.home-page .home-page-product-item {\\n  padding: 0px 32px;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n}\\n.home-page .home-page-product-item .home-page-product-item-label {\\n  padding: 26px 0px;\\n}\\n@media all and (max-width: 600px) {\\n  .home-page {\\n    padding-left: 32px;\\n  }\\n  .home-page .home-page-welcome {\\n    padding: 32px 0px 16px 0px;\\n  }\\n  .home-page .home-page-product-item {\\n    padding: 0px 16px;\\n  }\\n  .home-page .home-page-product-item .uxg-card-product {\\n    width: 90px;\\n    height: 50px;\\n  }\\n  .home-page .home-page-product-item .home-page-product-item-label {\\n    padding: 8px 0px 32px 0px;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGFpbmVycy9ob21lLXBhZ2UvQzpcXFVzZXJzXFx1NzIyNjg2XFxGaW5hc3RyYVxcZmZkYy1zYW1wbGUtcmV0YWlsLXdlYmFwcC9zcmNcXGFwcFxcY29udGFpbmVyc1xcaG9tZS1wYWdlXFxob21lLXBhZ2UuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2NvbnRhaW5lcnMvaG9tZS1wYWdlL2hvbWUtcGFnZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSxPQUFBO0VBQ0Esc0JBQUE7RUFDQSxtQkFBQTtBQ0NGO0FEQ0U7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSw0QkFBQTtBQ0NKO0FERUU7RUFDRSxhQUFBO0VBQ0EscUJBQUE7RUFDQSxxQkFBQTtFQUNBLGVBQUE7QUNBSjtBREVFO0VBQ0UsaUJBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0FDQUo7QURFSTtFQUNFLGlCQUFBO0FDQU47QURNQTtFQUNFO0lBQ0Usa0JBQUE7RUNIRjtFREtFO0lBQ0UsMEJBQUE7RUNISjtFREtFO0lBQ0UsaUJBQUE7RUNISjtFREtJO0lBQ0UsV0FBQTtJQUNBLFlBQUE7RUNITjtFRE1JO0lBQ0UseUJBQUE7RUNKTjtBQUNGIiwiZmlsZSI6InNyYy9hcHAvY29udGFpbmVycy9ob21lLXBhZ2UvaG9tZS1wYWdlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhvbWUtcGFnZSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4OiAxO1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgcGFkZGluZy1sZWZ0OiAyNDhweDtcclxuXHJcbiAgLmhvbWUtcGFnZS13ZWxjb21lIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgcGFkZGluZzogMTI4cHggMHB4IDY0cHggMzJweDtcclxuICB9XHJcblxyXG4gIC5ob21lLXBhZ2UtcHJvZHVjdC1saXN0IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogYmFzZWxpbmU7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGxlZnQ7XHJcbiAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgfVxyXG4gIC5ob21lLXBhZ2UtcHJvZHVjdC1pdGVtIHtcclxuICAgIHBhZGRpbmc6IDBweCAzMnB4O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblxyXG4gICAgLmhvbWUtcGFnZS1wcm9kdWN0LWl0ZW0tbGFiZWwge1xyXG4gICAgICBwYWRkaW5nOiAyNnB4IDBweFxyXG4gICAgfVxyXG4gIH1cclxuXHJcbn1cclxuXHJcbkBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7XHJcbiAgLmhvbWUtcGFnZSB7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDMycHg7XHJcblxyXG4gICAgLmhvbWUtcGFnZS13ZWxjb21lIHtcclxuICAgICAgcGFkZGluZzogMzJweCAwcHggMTZweCAwcHg7XHJcbiAgICB9XHJcbiAgICAuaG9tZS1wYWdlLXByb2R1Y3QtaXRlbSB7XHJcbiAgICAgIHBhZGRpbmc6IDBweCAxNnB4O1xyXG5cclxuICAgICAgLnV4Zy1jYXJkLXByb2R1Y3Qge1xyXG4gICAgICAgIHdpZHRoOiA5MHB4O1xyXG4gICAgICAgIGhlaWdodDogNTBweDtcclxuICAgICAgfVxyXG5cclxuICAgICAgLmhvbWUtcGFnZS1wcm9kdWN0LWl0ZW0tbGFiZWwge1xyXG4gICAgICAgIHBhZGRpbmc6IDhweCAwcHggMzJweCAwcHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbiIsIi5ob21lLXBhZ2Uge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4OiAxO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBwYWRkaW5nLWxlZnQ6IDI0OHB4O1xufVxuLmhvbWUtcGFnZSAuaG9tZS1wYWdlLXdlbGNvbWUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBwYWRkaW5nOiAxMjhweCAwcHggNjRweCAzMnB4O1xufVxuLmhvbWUtcGFnZSAuaG9tZS1wYWdlLXByb2R1Y3QtbGlzdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBiYXNlbGluZTtcbiAganVzdGlmeS1jb250ZW50OiBsZWZ0O1xuICBmbGV4LXdyYXA6IHdyYXA7XG59XG4uaG9tZS1wYWdlIC5ob21lLXBhZ2UtcHJvZHVjdC1pdGVtIHtcbiAgcGFkZGluZzogMHB4IDMycHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuLmhvbWUtcGFnZSAuaG9tZS1wYWdlLXByb2R1Y3QtaXRlbSAuaG9tZS1wYWdlLXByb2R1Y3QtaXRlbS1sYWJlbCB7XG4gIHBhZGRpbmc6IDI2cHggMHB4O1xufVxuXG5AbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA2MDBweCkge1xuICAuaG9tZS1wYWdlIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDMycHg7XG4gIH1cbiAgLmhvbWUtcGFnZSAuaG9tZS1wYWdlLXdlbGNvbWUge1xuICAgIHBhZGRpbmc6IDMycHggMHB4IDE2cHggMHB4O1xuICB9XG4gIC5ob21lLXBhZ2UgLmhvbWUtcGFnZS1wcm9kdWN0LWl0ZW0ge1xuICAgIHBhZGRpbmc6IDBweCAxNnB4O1xuICB9XG4gIC5ob21lLXBhZ2UgLmhvbWUtcGFnZS1wcm9kdWN0LWl0ZW0gLnV4Zy1jYXJkLXByb2R1Y3Qge1xuICAgIHdpZHRoOiA5MHB4O1xuICAgIGhlaWdodDogNTBweDtcbiAgfVxuICAuaG9tZS1wYWdlIC5ob21lLXBhZ2UtcHJvZHVjdC1pdGVtIC5ob21lLXBhZ2UtcHJvZHVjdC1pdGVtLWxhYmVsIHtcbiAgICBwYWRkaW5nOiA4cHggMHB4IDMycHggMHB4O1xuICB9XG59Il19 */\"","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../services';\r\n\r\n@Component({\r\n  selector: 'ffdc-home-page',\r\n  templateUrl: './home-page.component.html',\r\n  styleUrls: ['./home-page.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    class: 'home-page'\r\n  }\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n\r\n  get userName() {\r\n    return this.authService.getUserName();\r\n  }\r\n\r\n  constructor(private router: Router, private authService: AuthService) { }\r\n\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  goToAccountsPage() {\r\n    this.router.navigateByUrl('/accounts');\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HomePageComponent } from './home-page.component';\r\nimport { MaterialModules } from '../../material-modules';\r\n\r\n@NgModule({\r\n  declarations: [HomePageComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MaterialModules\r\n  ],\r\n  exports: [HomePageComponent],\r\n  entryComponents: [HomePageComponent]\r\n})\r\nexport class HomePageModule { }\r\n","import {NgModule} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\nexport class MaterialModules {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {\r\n  AccountSummary,\r\n  ExtendedAccount,\r\n  ExtendedDetaildedAccount,\r\n  AccountDetail,\r\n  AccountBalance\r\n} from '../store/models';\r\nimport { ROOT_API } from './config';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AccountApiService {\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  loadSummaryOfAccounts(): Observable<AccountSummary[]> {\r\n    return this.httpClient.get<AccountSummary[]>(`${ROOT_API}/accounts`);\r\n  }\r\n\r\n  loadExtendedAccounts(): Observable<ExtendedAccount[]> {\r\n    return this.httpClient.get<ExtendedAccount[]>(`${ROOT_API}/accounts/extended`);\r\n  }\r\n\r\n  loadExtendedAndDetailedAccounts(): Observable<ExtendedDetaildedAccount[]> {\r\n    return this.httpClient.get<ExtendedDetaildedAccount[]>(`${ROOT_API}/accounts/extendedWithDetails`);\r\n  }\r\n\r\n  getExtendedAndDetailedForAccount(accountId: string): Observable<ExtendedDetaildedAccount> {\r\n    return this.httpClient.get<ExtendedDetaildedAccount>(`${ROOT_API}/accounts/${accountId}`);\r\n  }\r\n\r\n  getAccountDetails(accountId: string): Observable<AccountDetail[]> {\r\n    return this.httpClient.get<AccountDetail[]>(`${ROOT_API}/accounts/${accountId}/details`);\r\n  }\r\n\r\n  getAccountBalance(accountId: string): Observable<AccountBalance[]> {\r\n    return this.httpClient.get<AccountBalance[]>(`${ROOT_API}/accounts/${accountId}/balances`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {\r\n  AccountTransaction,\r\n  AccountTransactionFilter,\r\n  AccountTransactionDetail,\r\n  UpdatedAccountTransaction,\r\n  AccountTransactionSavedImage,\r\n  AccountTransactionCheckedImage\r\n} from '../store/models';\r\nimport { ROOT_API } from './config';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AccountTransactionApiService {\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  searchAccountTransactions(accountId: string, filter: AccountTransactionFilter): Observable<AccountTransaction[]> {\r\n    const params = new HttpParams();\r\n    if (filter.startDate) {\r\n      params.append('startDate', filter.startDate);\r\n    }\r\n    let url = `${ROOT_API}/accounts/${accountId}/transactions?startDate=${filter.startDate}`;\r\n    if (filter.endDate) {\r\n      params.append('endDate', filter.endDate);\r\n      url += `&endDate=${filter.endDate}`;\r\n    }\r\n    if (filter.limit) {\r\n      params.append('limit', filter.limit.toString(0));\r\n    }\r\n    if (filter.offset) {\r\n      params.append('limit', filter.offset.toString(0));\r\n    }\r\n    return this.httpClient.get<AccountTransaction[]>(url, {\r\n      params\r\n    });\r\n  }\r\n\r\n  getAccountTransactionDetail(accountId: string, transactionId: string): Observable<AccountTransactionDetail[]> {\r\n    return this.httpClient.get<AccountTransactionDetail[]>(\r\n      `${ROOT_API}/accounts/${accountId}/transactions/${transactionId}`\r\n    );\r\n  }\r\n\r\n  updateAccountTransaction(\r\n    accountId: string,\r\n    transactionId: string,\r\n    updateAccountTransaction: UpdatedAccountTransaction\r\n  ): Observable<any> {\r\n    return this.httpClient.patch<any>(\r\n      `${ROOT_API}/accounts/${accountId}/transactions/${transactionId}`,\r\n      updateAccountTransaction\r\n    );\r\n  }\r\n\r\n  getSavedImageAccountTransaction(accountId: string, transactionId: string): Observable<AccountTransactionSavedImage> {\r\n    return this.httpClient.get<AccountTransactionSavedImage>(\r\n      `${ROOT_API}/accounts/${accountId}/transactions/${transactionId}/transactionImage`\r\n    );\r\n  }\r\n\r\n  getCheckedImageAccountTransaction(\r\n    accountId: string,\r\n    transactionId: string\r\n  ): Observable<AccountTransactionCheckedImage> {\r\n    return this.httpClient.get<AccountTransactionCheckedImage>(\r\n      `${ROOT_API}/accounts/${accountId}/transactions/${transactionId}/checkImage`\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ExtendedDetaildedAccount,\r\n  AccountOverview,\r\n  AccountBalance,\r\n  AccountEntity,\r\n  AllAccountsOverview,\r\n  AccountInterestPaid,\r\n  AccountDetail\r\n} from '../store/models';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AccountService {\r\n  constructor() {}\r\n\r\n  getAccountOverview(account: AccountEntity): AccountOverview {\r\n    const extendAccount = account as ExtendedDetaildedAccount;\r\n    const currentBalance: AccountBalance | undefined = extendAccount.balances\r\n      ? extendAccount.balances.find(balence => balence.type === 'current')\r\n      : undefined;\r\n    const avaibleBalance: AccountBalance | undefined = extendAccount.balances\r\n      ? extendAccount.balances.find(balence => balence.type === 'available')\r\n      : undefined;\r\n    const accountNumber: string = extendAccount.accountNumber ? extendAccount.accountNumber : '';\r\n\r\n    return {\r\n      nickname: account.nickname,\r\n      currentBalance: currentBalance ? currentBalance.amount : 0,\r\n      availableBalance: avaibleBalance ? avaibleBalance.amount : 0,\r\n      accountNumber\r\n    };\r\n  }\r\n\r\n  getAccountInterestPaid(account: AccountEntity): AccountInterestPaid {\r\n    const extendAccount = account as ExtendedDetaildedAccount;\r\n    const interestThisYear: AccountDetail | undefined = extendAccount.details\r\n      ? extendAccount.details.find(detail => detail.label === 'Interest Paid Year to Date')\r\n      : undefined;\r\n    const interestLastYear: AccountDetail | undefined = extendAccount.details\r\n      ? extendAccount.details.find(detail => detail.label === 'Interest Paid Last Year')\r\n      : undefined;\r\n    return {\r\n      interestThisYear: interestThisYear ? interestThisYear.value : '$0.00',\r\n      interestLastYear: interestLastYear ? interestLastYear.value : '$0.00'\r\n    };\r\n  }\r\n\r\n  getAllAcountOverview(accounts: AccountEntity[]): AllAccountsOverview {\r\n    let current = 0;\r\n    let available = 0;\r\n    for (const account of accounts) {\r\n      const extendAccount = account as ExtendedDetaildedAccount;\r\n      const currentBalance: AccountBalance | undefined = extendAccount.balances\r\n        ? extendAccount.balances.find(balence => balence.type === 'current')\r\n        : undefined;\r\n      const avaibleBalance: AccountBalance | undefined = extendAccount.balances\r\n        ? extendAccount.balances.find(balence => balence.type === 'available')\r\n        : undefined;\r\n\r\n      current += currentBalance ? currentBalance.amount : 0;\r\n      available += avaibleBalance ? avaibleBalance.amount : 0;\r\n    }\r\n\r\n    return { available, current };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../store/models/user';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n\r\n  user: User | undefined;\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getUserName() {\r\n    return this.user ? this.user.username : '';\r\n  }\r\n\r\n  isAuthenticated() {}\r\n\r\n  getUserInfo(): Promise<User> {\r\n    return this.httpClient.get<User>('/api/user').toPromise();\r\n  }\r\n\r\n  refreshToken(): Observable<string> {\r\n    return this.httpClient.post<string>('/refresh_token', {});\r\n  }\r\n\r\n}\r\n","export const ROOT_API = '/proxy';\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class GlobalsService {\r\n  constructor() { }\r\n\r\n  getUser() {\r\n\r\n  }\r\n}\r\n","export * from './account-api.service';\r\nexport * from './auth.service';\r\nexport * from './user.service';\r\nexport * from './globals.service';\r\nexport * from './account-transaction-api.service';\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { AccountSummary } from '../store/models';\r\nimport { AccountApiService } from './account-api.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { take, mergeMap, tap } from 'rxjs/operators';\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from '../store/reducers';\r\nimport { AccountApiActions } from '../store/actions';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LoadAccountResolverService implements Resolve<AccountSummary[]> {\r\n  private loaded = false;\r\n  constructor(private accountApi: AccountApiService, private store: Store<AppState>) {\r\n\r\n  }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\r\n    if (this.loaded) {\r\n      return of([]);\r\n    }\r\n    return this.accountApi.loadSummaryOfAccounts().pipe(\r\n      take(1),\r\n      tap(accounts => {\r\n        this.loaded = true;\r\n        this.store.dispatch(AccountApiActions.loadSummaryOfAccountsSuccess({ accounts }));\r\n      }),\r\n      mergeMap(accounts => of(accounts))\r\n    );\r\n  }\r\n}\r\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, EMPTY, throwError, BehaviorSubject } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\nimport { catchError, filter, take, switchMap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n  private refreshTokenInProgress = false;\r\n\r\n  // Refresh Token Subject tracks the current token, or is null if no token is currently\r\n  // available (e.g. refresh pending).\r\n  private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n\r\n  constructor(private auth: AuthService) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<any> {\r\n    return next.handle(req).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        if (this.refreshTokenInProgress && req.url === '/refresh_token') {\r\n          // if it can not refresh_token with error 401. It will do logout.\r\n          window.location.href = '/logout';\r\n        }\r\n\r\n        if (error && error.status === 401) {\r\n          if (this.refreshTokenInProgress) {\r\n            // If refreshTokenInProgress is true, we will wait until refreshTokenSubject has a non-null value\r\n            // – which means the new token is ready and we can retry the request again\r\n            return this.refreshTokenSubject.pipe(\r\n              filter(result => result !== null),\r\n              take(1),\r\n              switchMap(() => next.handle(req))\r\n            );\r\n          } else {\r\n            this.refreshTokenInProgress = true;\r\n            // Set the refreshTokenSubject to null so that subsequent API calls will wait until the new token has been retrieved\r\n            this.refreshTokenSubject.next(null);\r\n            return this.auth.refreshToken().pipe(\r\n              switchMap(() => {\r\n                // When the call to refreshToken completes we reset the refreshTokenInProgress to false\r\n                // for the next time the token needs to be refreshed\r\n                this.refreshTokenInProgress = false;\r\n                this.refreshTokenSubject.next({});\r\n                return next.handle(req);\r\n              }),\r\n              catchError(err => {\r\n                this.refreshTokenInProgress = false;\r\n                return throwError(err);\r\n              })\r\n            );\r\n          }\r\n        }\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class UserService {\r\n  constructor() {}\r\n  getUser() {\r\n\r\n  }\r\n}\r\n","import { createAction, props } from '@ngrx/store';\r\nimport {\r\n  AccountSummary,\r\n  ExtendedAccount,\r\n  ExtendedDetaildedAccount,\r\n  AccountDetail,\r\n  AccountBalance\r\n} from '../models/account';\r\n\r\nexport const loadSummaryOfAccountsSuccess = createAction(\r\n  '[Account Api] Retrieve a Summary of Accounts for an Account Holder Success',\r\n  props<{ accounts: AccountSummary[] }>()\r\n);\r\nexport const loadSummaryOfAccountsFailure = createAction(\r\n  '[Account Api] Retrieve a Summary of Accounts for an Account Holder Failure',\r\n  props<{ error: any }>()\r\n);\r\n\r\nexport const loadExtendedAccountsSuccess = createAction(\r\n  '[Account Api] Retrieve All Extended Account Information Success',\r\n  props<{ accounts: ExtendedAccount[] }>()\r\n);\r\nexport const loadExtendedAccountsFailure = createAction(\r\n  '[Account Api] Retrieve All Extended Account Information Failure',\r\n  props<{ error: any }>()\r\n);\r\n\r\nexport const loadExtendedAndDetailedAccountsSuccess = createAction(\r\n  '[Account Api] Retrieve All Account Extended and Detailed Information Success',\r\n  props<{ accounts: ExtendedDetaildedAccount[] }>()\r\n);\r\nexport const loadExtendedAndDetailedAccountsFailure = createAction(\r\n  '[Account Api] Retrieve All Account Extended and Detailed Information Failure',\r\n  props<{ error: any }>()\r\n);\r\n\r\nexport const getExtendedAndDetailedForAccountSuccess = createAction(\r\n  '[Account Api] Retrieve Extended and Detailed Information for an Account Success',\r\n  props<{ account: ExtendedDetaildedAccount }>()\r\n);\r\nexport const getExtendedAndDetailedForAccountFailure = createAction(\r\n  '[Account Api] Retrieve Extended and Detailed Information for an Account Failure',\r\n  props<{ error: any }>()\r\n);\r\n\r\nexport const getAccountDetailsSuccess = createAction(\r\n  '[Account Api] Retrieve Account Detail for an Account Success',\r\n  props<{ accountDetails: AccountDetail[] }>()\r\n);\r\nexport const getAccountDetailsFailure = createAction(\r\n  '[Account Api] Retrieve Account Detail for an Account Failure',\r\n  props<{ error: any }>()\r\n);\r\n\r\nexport const getAccountBalanceSuccess = createAction(\r\n  '[Account Api] Retrieve an Account Balance Success',\r\n  props<{ accountBalances: AccountBalance[] }>()\r\n);\r\nexport const getAccountBalanceFailure = createAction(\r\n  '[Account Api] Retrieve an Account Balance Failure',\r\n  props<{ error: any }>()\r\n);\r\n","import { createAction, props } from '@ngrx/store';\r\nimport {\r\n  AccountTransaction,\r\n  AccountTransactionDetail,\r\n  UpdatedAccountTransaction,\r\n  AccountTransactionSavedImage,\r\n  AccountTransactionCheckedImage\r\n} from '../models';\r\n\r\nexport const searchAccountTransactionsSuccess = createAction(\r\n  '[Account transaction] Search for Account Holders Transactions Success',\r\n  props<{ accountTransactions: AccountTransaction[] }>()\r\n);\r\n\r\nexport const getAccountTransactionDetailSuccess = createAction(\r\n  '[Account transaction] Retrieve Transaction Details Success',\r\n  props<{ accountId: string; transactionId: string; transactionDetails: AccountTransactionDetail[] }>()\r\n);\r\nexport const updateAccountTransactionSuccess = createAction(\r\n  '[Account transaction] Update an Existing Transaction Success',\r\n  props<{ accountId: string; transactionId: string; updaUpdatedAccountTransaction: UpdatedAccountTransaction }>()\r\n);\r\nexport const getSavedImageAccountTransactionSuccess = createAction(\r\n  '[Account transaction] Retrieve Saved Image for a Transaction Success',\r\n  props<{ accountId: string; transactionId: string; savedImage: AccountTransactionSavedImage }>()\r\n);\r\n\r\nexport const getCheckedImageAccountTransactionSuccess = createAction(\r\n  '[Account transaction] Retrieve Check Image for a Transaction Success',\r\n  props<{ accountId: string; transactionId: string; checkedImage: AccountTransactionCheckedImage }>()\r\n);\r\n\r\n// Failure\r\nexport const searchAccountTransactionsFailure = createAction(\r\n  '[Account transaction] Search for Account Holders Transactions Failure',\r\n  props<{ error: any }>()\r\n);\r\nexport const getAccountTransactionDetailFailure = createAction(\r\n  '[Account transaction] Retrieve Transaction Details Failure',\r\n  props<{ error: any }>()\r\n);\r\nexport const updateAccountTransactionFailure = createAction(\r\n  '[Account transaction] Update an Existing Transaction Failure',\r\n  props<{ error: any }>()\r\n);\r\nexport const getSavedImageAccountTransactionFailure = createAction(\r\n  '[Account transaction] Retrieve Saved Image for a Transaction Failure',\r\n  props<{ error: any }>()\r\n);\r\n\r\nexport const getCheckedImageAccountTransactionFailure = createAction(\r\n  '[Account transaction] Retrieve Check Image for a Transaction Failure',\r\n  props<{ error: any }>()\r\n);\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { AccountTransactionFilter } from '../models';\r\n\r\nexport const searchAccountTransactions = createAction(\r\n  '[Account transaction] Search for Account Holders Transactions',\r\n  props<{ accountId: string, filter: AccountTransactionFilter }>()\r\n);\r\n\r\nexport const searchAllAccountTransactions = createAction(\r\n  '[Account transaction] Search for All Account Holders Transactions',\r\n  props<{ filter: AccountTransactionFilter }>()\r\n);\r\n\r\nexport const getAccountTransactionDetail = createAction(\r\n  '[Account transaction] Retrieve Transaction Details',\r\n  props<{ accountId: string, transactionId: string }>()\r\n);\r\nexport const updateAccountTransaction = createAction(\r\n  '[Account transaction] Update an Existing Transaction',\r\n  props<{ accountId: string, transactionId: string }>()\r\n);\r\nexport const getSavedImageAccountTransaction = createAction(\r\n  '[Account transaction] Retrieve Saved Image for a Transaction',\r\n  props<{ accountId: string, transactionId: string }>()\r\n);\r\n\r\nexport const getCheckedImageAccountTransaction = createAction(\r\n  '[Account transaction] Retrieve Check Image for a Transaction',\r\n  props<{ accountId: string, transactionId: string }>()\r\n);\r\n\r\nexport const updateTransactionsSelectedDate = createAction(\r\n  '[Account transaction] Update selected date',\r\n  props<{ selectedDate: Date }>()\r\n);\r\n","import { createAction, props } from '@ngrx/store';\r\n\r\nexport const loadSummaryOfAccounts = createAction('[Account] Retrieve a Summary of Accounts for an Account Holder');\r\n\r\nexport const loadExtendedAccounts = createAction('[Account] Retrieve All Extended Account Information');\r\n\r\nexport const loadExtendedAndDetailedAccounts = createAction(\r\n  '[Account] Retrieve All Account Extended and Detailed Information'\r\n);\r\n\r\nexport const getExtendedAndDetailedForAccount = createAction(\r\n  '[Account] Retrieve Extended and Detailed Information for an Account',\r\n  props<{ accountId: string }>()\r\n);\r\n\r\nexport const getAccountDetails = createAction(\r\n  '[Account] Retrieve Account Detail for an Account',\r\n  props<{ accountId: string }>()\r\n);\r\n\r\nexport const getAccountBalance = createAction('[Account] Retrieve an Account Balance', props<{ accountId: string }>());\r\n","import * as AccountActions from './account.actions';\r\nimport * as AccountTransactionActions from './account-transaction.actions';\r\nimport * as AccountTransactionApiActions from './account-transaction-api.actions';\r\n\r\nimport * as AccountApiActions from './account-api.actions';\r\n\r\n\r\nexport { AccountActions, AccountApiActions, AccountTransactionActions, AccountTransactionApiActions };\r\n","import { Injectable } from '@angular/core';\r\nimport { createEffect, Actions, ofType } from '@ngrx/effects';\r\nimport { switchMap, map, catchError, withLatestFrom, mergeMap } from 'rxjs/operators';\r\n\r\nimport { AccountTransactionActions, AccountTransactionApiActions } from '../actions';\r\nimport { AccountTransactionApiService } from '../../services';\r\nimport { of, forkJoin } from 'rxjs';\r\nimport { AppState, selectAllAccounts } from '../reducers';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { AccountTransaction } from '../models';\r\n\r\n@Injectable()\r\nexport class AccountTransactionEffects {\r\n  searchTransactionForAllAccount$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(AccountTransactionActions.searchAllAccountTransactions),\r\n      withLatestFrom(this.store.pipe(select(selectAllAccounts))),\r\n      switchMap(([action, accounts]) => {\r\n        return forkJoin(\r\n          accounts.map(account =>\r\n            this.accountTransactionApi\r\n              .searchAccountTransactions(account.accountId, action.filter)\r\n              .pipe(catchError(() => of<AccountTransaction[]>([])))\r\n          )\r\n        ).pipe(\r\n          map(allTransactions => allTransactions.reduce((transactions, item) => [...transactions, ...item], [])),\r\n          map(accountTransactions =>\r\n            AccountTransactionApiActions.searchAccountTransactionsSuccess({ accountTransactions })\r\n          )\r\n        );\r\n      })\r\n    )\r\n  );\r\n\r\n  searchAccountTransaction$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(AccountTransactionActions.searchAccountTransactions),\r\n      switchMap(action => {\r\n        return this.accountTransactionApi.searchAccountTransactions(action.accountId, action.filter).pipe(\r\n          map(accountTransactions =>\r\n            AccountTransactionApiActions.searchAccountTransactionsSuccess({ accountTransactions })\r\n          ),\r\n          catchError(error => of(AccountTransactionApiActions.searchAccountTransactionsFailure({ error })))\r\n        );\r\n      })\r\n    )\r\n  );\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private store: Store<AppState>,\r\n    private accountTransactionApi: AccountTransactionApiService\r\n  ) {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { createEffect, Actions, ofType } from '@ngrx/effects';\r\nimport { switchMap, map, catchError } from 'rxjs/operators';\r\n\r\nimport { AccountActions, AccountApiActions } from '../actions';\r\nimport { AccountApiService } from '../../services';\r\nimport { of } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AccountEffects {\r\n  loadSummaryOfAccounts$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(AccountActions.loadSummaryOfAccounts),\r\n      switchMap(() =>\r\n        this.accountApi.loadSummaryOfAccounts().pipe(\r\n          map(accounts => AccountApiActions.loadSummaryOfAccountsSuccess({ accounts })),\r\n          catchError(error => of(AccountApiActions.loadSummaryOfAccountsFailure({ error })))\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  loadExtendedAccounts$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(AccountActions.loadExtendedAccounts),\r\n      switchMap(() =>\r\n        this.accountApi.loadExtendedAccounts().pipe(\r\n          map(accounts => AccountApiActions.loadExtendedAccountsSuccess({ accounts })),\r\n          catchError(error => of(AccountApiActions.loadExtendedAccountsFailure({ error })))\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  loadExtendedAndDetailedAccounts$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(AccountActions.loadExtendedAndDetailedAccounts),\r\n      switchMap(() =>\r\n        this.accountApi.loadExtendedAndDetailedAccounts().pipe(\r\n          map(accounts => AccountApiActions.loadExtendedAndDetailedAccountsSuccess({ accounts })),\r\n          catchError(error => of(AccountApiActions.loadExtendedAndDetailedAccountsFailure({ error })))\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  getExtendedAndDetailedForAccount$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(AccountActions.getExtendedAndDetailedForAccount),\r\n      switchMap(({ accountId }) =>\r\n        this.accountApi.getExtendedAndDetailedForAccount(accountId).pipe(\r\n          map(account => AccountApiActions.getExtendedAndDetailedForAccountSuccess({ account })),\r\n          catchError(error => of(AccountApiActions.getExtendedAndDetailedForAccountFailure({ error })))\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  getAccountDetails$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(AccountActions.getAccountDetails),\r\n      switchMap(({ accountId }) =>\r\n        this.accountApi.getAccountDetails(accountId).pipe(\r\n          map(accountDetails => AccountApiActions.getAccountDetailsSuccess({ accountDetails })),\r\n          catchError(error => of(AccountApiActions.getAccountDetailsFailure({ error })))\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  constructor(private actions$: Actions, private accountApi: AccountApiService) {}\r\n}\r\n","export * from './account.effects';\r\nexport * from './account-transaction.effects';\r\n","import { EntityState, createEntityAdapter, EntityAdapter, Update } from '@ngrx/entity';\r\nimport { AccountTransaction } from '../models';\r\nimport { createReducer, on } from '@ngrx/store';\r\n\r\nimport { AccountTransactionApiActions, AccountTransactionActions } from '../actions';\r\n\r\nexport interface State extends EntityState<AccountTransaction> {\r\n  searching: boolean;\r\n  selectedDate: Date;\r\n}\r\n\r\nexport const adapter: EntityAdapter<AccountTransaction> = createEntityAdapter<AccountTransaction>({\r\n  selectId: (transaction: AccountTransaction) => transaction.id,\r\n  sortComparer: false\r\n});\r\n\r\nexport const initialState: State = adapter.getInitialState({\r\n  searching: false,\r\n  selectedDate: new Date(1575154800000)\r\n});\r\n\r\nexport const reducer = createReducer(\r\n  initialState,\r\n  on(\r\n    AccountTransactionActions.searchAllAccountTransactions,\r\n    AccountTransactionActions.searchAccountTransactions,\r\n    (state, { type }) => {\r\n      return { ...state, ...{ searching: true } };\r\n    }\r\n  ),\r\n  on(AccountTransactionApiActions.searchAccountTransactionsSuccess, (state, { type, accountTransactions }) => {\r\n    state.searching = false;\r\n    return adapter.addAll(accountTransactions, state);\r\n  }),\r\n  on(AccountTransactionApiActions.searchAccountTransactionsFailure, (state, { type }) => {\r\n    return { ...state, ...{ searching: false } };\r\n  }),\r\n  on(AccountTransactionActions.updateTransactionsSelectedDate, (state, {selectedDate}) => {\r\n    return {...state, ...{selectedDate}};\r\n  })\r\n);\r\n","import { EntityState, createEntityAdapter, EntityAdapter, Update } from '@ngrx/entity';\r\nimport { AccountEntity } from '../models';\r\nimport { createReducer, on } from '@ngrx/store';\r\n\r\nimport { AccountApiActions } from '../actions';\r\n\r\nexport interface State extends EntityState<AccountEntity> {}\r\n\r\nexport const adapter: EntityAdapter<AccountEntity> = createEntityAdapter<AccountEntity>({\r\n  selectId: (account: AccountEntity) => account.accountId,\r\n  sortComparer: false\r\n});\r\n\r\nexport const initialState: State = adapter.getInitialState();\r\n\r\nexport const reducer = createReducer(\r\n  initialState,\r\n  on(\r\n    AccountApiActions.loadSummaryOfAccountsSuccess,\r\n    AccountApiActions.loadExtendedAccountsSuccess,\r\n    AccountApiActions.loadExtendedAndDetailedAccountsSuccess,\r\n    (state, { type, accounts }) => {\r\n      const updateAccounts: Update<AccountEntity>[] = [];\r\n      const insertAccounts: AccountEntity[] = [];\r\n\r\n      for (const account of accounts) {\r\n        if (AccountApiActions.loadExtendedAccountsSuccess.type === type) {\r\n          account.loadedExtend = true;\r\n        }\r\n        if (AccountApiActions.loadExtendedAndDetailedAccountsSuccess.type === type) {\r\n          account.loadedExtend = true;\r\n          account.loadedExtend = true;\r\n        }\r\n        if (state.entities[account.accountId]) {\r\n          updateAccounts.push({ id: account.accountId, changes: account });\r\n        } else {\r\n          insertAccounts.push(account);\r\n        }\r\n      }\r\n      state = adapter.updateMany(updateAccounts, state);\r\n      return adapter.addMany(insertAccounts, state);\r\n    }\r\n  ),\r\n  on(\r\n    AccountApiActions.getExtendedAndDetailedForAccountSuccess,\r\n    (state, {  account }) => {\r\n      return adapter.upsertOne(account, state);\r\n    }\r\n  )\r\n);\r\n","import * as fromAccount from './account.reducer';\r\nimport * as fromAccountTransaction from './account-transaction.reducer';\r\nimport { Action, combineReducers, createSelector, ActionReducerMap, createFeatureSelector } from '@ngrx/store';\r\nimport * as fromRouter from '@ngrx/router-store';\r\nimport { MergedRoute } from './merged-route';\r\nimport { InjectionToken } from '@angular/core';\r\nimport { AccountEntity, AccountTransaction } from '../models';\r\nimport { Dictionary } from '@ngrx/entity';\r\n\r\nexport interface AppState {\r\n  accounts: fromAccount.State;\r\n  accountTransactions: fromAccountTransaction.State;\r\n  router: fromRouter.RouterReducerState<MergedRoute>;\r\n}\r\n\r\nexport const ROOT_REDUCERS = new InjectionToken<ActionReducerMap<AppState, Action>>('Root reducers token', {\r\n  factory: () => ({\r\n    accounts: fromAccount.reducer,\r\n    accountTransactions: fromAccountTransaction.reducer,\r\n    router: fromRouter.routerReducer\r\n  })\r\n});\r\n\r\nexport const selectRouterState = createFeatureSelector<AppState, fromRouter.RouterReducerState<MergedRoute>>('router');\r\nexport const selectAccountState = createFeatureSelector<AppState, fromAccount.State>('accounts');\r\nexport const selectAccountTransactionState = createFeatureSelector<AppState, fromAccountTransaction.State>(\r\n  'accountTransactions'\r\n);\r\n\r\nexport const {\r\n  selectIds: selectAccountIds,\r\n  selectEntities: selectAccountEntities,\r\n  selectAll: selectAllAccounts,\r\n  selectTotal: selectTotalAccounts\r\n} = fromAccount.adapter.getSelectors(selectAccountState);\r\n\r\nexport const selectAccountById = createSelector(\r\n  selectAccountEntities,\r\n  (accountEntities: Dictionary<AccountEntity>, props: { accountId: string }) => {\r\n    return accountEntities[props.accountId];\r\n  }\r\n);\r\n\r\n\r\nexport const {\r\n  selectIds: selectAccountTransactionIds,\r\n  selectEntities: selectAccountTransactionEntities,\r\n  selectAll: selectAllAccountTransactions,\r\n  selectTotal: selectTotalAccountTransactions\r\n} = fromAccountTransaction.adapter.getSelectors(selectAccountTransactionState);\r\n\r\nexport const isSearchingAccountTransactions = createSelector(\r\n  selectAccountTransactionState,\r\n  state => state.searching\r\n);\r\n\r\nexport const selectTransactionsDate = createSelector(\r\n  selectAccountTransactionState,\r\n  state => state.selectedDate\r\n);\r\n\r\nexport const selectAccountTransactionsWithAccountInfo = createSelector(\r\n  selectAccountEntities,\r\n  selectAllAccountTransactions,\r\n  (accounts, accountTransactions) => {\r\n    return accountTransactions\r\n      .map(transaction => ({ ...transaction, ...{ account: accounts[transaction.accountId] } }))\r\n      .sort((a, b) => new Date(a.transactionDate).getTime() - new Date(b.transactionDate).getTime());\r\n  }\r\n);\r\n\r\nexport const selectAccountTransactionsWithAccountInfoForAccount = createSelector(\r\n  selectAccountEntities,\r\n  selectAllAccountTransactions,\r\n  (accounts: Dictionary<AccountEntity>, accountTransactions: AccountTransaction[], props: {accountId: string}) => {\r\n    return accountTransactions\r\n      .filter(transaction => transaction.accountId === props.accountId)\r\n      .map(transaction => ({ ...transaction, ...{ account: accounts[transaction.accountId] } }))\r\n      .sort((a, b) => new Date(a.transactionDate).getTime() - new Date(b.transactionDate).getTime());\r\n  }\r\n);\r\nexport const {\r\n  selectQueryParams, // select the current route query params\r\n  selectQueryParam, // factory function to select a query param\r\n  selectRouteParams, // select the current route params\r\n  selectRouteParam, // factory function to select a route param\r\n  selectRouteData, // select the current route data\r\n  selectUrl // select the current url\r\n} = fromRouter.getSelectors(selectRouterState);\r\n","import { RouterStateSerializer } from '@ngrx/router-store';\r\nimport { RouterStateSnapshot } from '@angular/router';\r\nimport { MergedRoute } from './merged-route';\r\n\r\nexport class MergedRouterStateSerializer implements RouterStateSerializer<MergedRoute> {\r\n  serialize(routerState: RouterStateSnapshot): MergedRoute {\r\n    let root = routerState.root;\r\n\r\n    while (root.firstChild) {\r\n      root = root.firstChild;\r\n    }\r\n    const {\r\n      url,\r\n      root: { queryParams }\r\n    } = routerState;\r\n    const { params, data } = root;\r\n    return { url, params, queryParams, data, root };\r\n  }\r\n}\r\n","import moment from 'moment';\r\n\r\nconst DATE_FORMAT = 'YYYY-MM-DD';\r\nexport function dateFormat(date: Date, format = DATE_FORMAT): string {\r\n  return moment(date).format(format);\r\n}\r\n\r\nexport function compareDate(dateA: string, dateB: string): number {\r\n  return moment(dateA, DATE_FORMAT).isBefore(moment(dateB, DATE_FORMAT)) ? 1 : -1;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nimport 'hammerjs';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}